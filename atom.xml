<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>BIRD IS GREAT</title>
  <subtitle>BETTER TO RUN THAN CURSE THE ROAD.</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="https://cybeird.tk/"/>
  <updated>2016-10-23T06:49:32.000Z</updated>
  <id>https://cybeird.tk/</id>
  
  <author>
    <name>CyBeird</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>正式驻扎在HEXO!</title>
    <link href="https://cybeird.tk/2016/10/23/stationed-on/"/>
    <id>https://cybeird.tk/2016/10/23/stationed-on/</id>
    <published>2016-10-23T06:27:09.000Z</published>
    <updated>2016-10-23T06:49:32.000Z</updated>
    
    <content type="html"><![CDATA[<p>好了，搞了差不多有两节课的时间，终于把WP上的博文全数迁移到了HEXO上，实在是很不容易。<br><blockquote><p>首先，安装 hexo-migrator-wordpress 插件。<br>undefined</p>
<footer><strong>HEXO</strong><cite><a href="https://hexo.io/zh-cn/docs/migration.html" target="_blank" rel="external">迁移</a></cite></footer></blockquote><br>没错，官方是有这么一个插件可以将WordPress上的博文直接迁移到hexo上，十分的简单而又快捷。<br>不过唯一麻烦的是代码块方面，只需要把<pre>,<code>这样的东西改成<code>c++</code>即可。</code></pre></p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;好了，搞了差不多有两节课的时间，终于把WP上的博文全数迁移到了HEXO上，实在是很不容易。&lt;br&gt;&lt;blockquote&gt;&lt;p&gt;首先，安装 hexo-migrator-wordpress 插件。&lt;br&gt;undefined&lt;/p&gt;
&lt;footer&gt;&lt;strong&gt;HEXO&lt;/
    
    </summary>
    
    
      <category term="hexo" scheme="https://cybeird.tk/tags/hexo/"/>
    
  </entry>
  
  <entry>
    <title>『2』我要入门！矩阵？辣鸡！[Uva 442](TOWQs)</title>
    <link href="https://cybeird.tk/2016/10/23/%E6%88%91%E8%A6%81%E5%85%A5%E9%97%A83rd/"/>
    <id>https://cybeird.tk/2016/10/23/我要入门3rd/</id>
    <published>2016-10-23T01:50:54.000Z</published>
    <updated>2016-10-23T06:22:22.000Z</updated>
    
    <summary type="html">
    
    </summary>
    
      <category term="c++" scheme="https://cybeird.tk/categories/c/"/>
    
    
      <category term="我要入门" scheme="https://cybeird.tk/tags/%E6%88%91%E8%A6%81%E5%85%A5%E9%97%A8/"/>
    
      <category term="基础数据结构" scheme="https://cybeird.tk/tags/%E5%9F%BA%E7%A1%80%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/"/>
    
      <category term="c++" scheme="https://cybeird.tk/tags/c/"/>
    
  </entry>
  
  <entry>
    <title>从头开始吧!少年，感受这一切/</title>
    <link href="https://cybeird.tk/2016/10/20/Form-Begining/"/>
    <id>https://cybeird.tk/2016/10/20/Form-Begining/</id>
    <published>2016-10-20T12:12:05.000Z</published>
    <updated>2016-10-21T06:54:06.000Z</updated>
    
    <content type="html"><![CDATA[<blockquote class="blockquote-center"><p>这个简陋的网站可算是有了几分雏形了</p>
</blockquote>
<a id="more"></a>
<p>现在终于不用再去忍受哪令人作呕的超长域名了，而仅仅只需要用cybeird.tk就可以访问了(当然，你也可以用cybeird.github.io来进入，实际上并没有什么区别)<br>而接下来要做的事情可能就是从我的wordpress那块把我的博客都转载过来了</p>
]]></content>
    
    <summary type="html">
    
      &lt;blockquote class=&quot;blockquote-center&quot;&gt;&lt;p&gt;这个简陋的网站可算是有了几分雏形了&lt;/p&gt;
&lt;/blockquote&gt;
    
    </summary>
    
      <category term="magical" scheme="https://cybeird.tk/categories/magical/"/>
    
    
      <category term="hexo" scheme="https://cybeird.tk/tags/hexo/"/>
    
  </entry>
  
  <entry>
    <title>从WP到HEXO</title>
    <link href="https://cybeird.tk/2016/10/20/%E4%BB%8EWP%E5%88%B0HEXO/"/>
    <id>https://cybeird.tk/2016/10/20/从WP到HEXO/</id>
    <published>2016-10-20T11:01:24.000Z</published>
    <updated>2016-10-21T06:43:50.000Z</updated>
    
    <content type="html"><![CDATA[  <blockquote class="blockquote-center"><br>  这不该是这样的～ –古尔丹<br>  时代变了！ </blockquote>

<p>  实际上，很久以前就对wordpress中十分诡异的对中文字体的支持颇有微词了，而同时作为一个穷逼，并没有钱去获得全托管的网站，对于网站的CSS也是表示毫无权限。<br>  在经历了无穷无尽，水深火热的小白期后，终于成为了一个菜鸟，然后照着谷歌上的<a href="https://http://opiece.me/2015/04/09/hexo-guide/" target="_blank" rel="external">教程</a>终于成功的搭建起了自己的网站(想想也是很不容易)。<br>  <a id="more"></a></p>
<p>  然后发一篇博文来试一试 <a href="https://github.com/iissnan/hexo-theme-next" target="_blank" rel="external">NexT</a> 的特性(比如说代码高亮之类的东西)；</p>
  <figure class="highlight c++"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div></pre></td><td class="code"><pre><div class="line">  <span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;stdio.h&gt;</span></span></div><div class="line"><span class="function"><span class="keyword">int</span> <span class="title">lowbit</span><span class="params">(<span class="keyword">int</span> x)</span></span></div><div class="line">&#123;</div><div class="line">	<span class="keyword">return</span> x &amp; (-x);</div><div class="line">&#125;</div><div class="line"><span class="keyword">int</span> bit[<span class="number">10001</span>];</div><div class="line"><span class="keyword">int</span> a[<span class="number">100001</span>];</div><div class="line"><span class="keyword">int</span> n,l,r;</div><div class="line"><span class="function"><span class="keyword">int</span> <span class="title">built</span><span class="params">()</span></span></div><div class="line">&#123;</div><div class="line">	<span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;i++)</div><div class="line">	 &#123;</div><div class="line">	 	bit[i]=a[i];</div><div class="line">	 	<span class="keyword">for</span>(<span class="keyword">int</span> j=i<span class="number">-1</span>;j&gt;i-lowbit(i);j-=lowbit(j))</div><div class="line">	 	 bit[i]+=bit[j];</div><div class="line">	 &#125;</div><div class="line">&#125;</div><div class="line"><span class="function"><span class="keyword">int</span> <span class="title">sum</span><span class="params">(<span class="keyword">int</span> k)</span></span></div><div class="line">&#123;</div><div class="line">	<span class="keyword">int</span> ans=<span class="number">0</span>;</div><div class="line">	<span class="keyword">for</span>(<span class="keyword">int</span> i=k;i&gt;<span class="number">0</span>;i-=lowbit(i))</div><div class="line">	 ans+=bit[i];</div><div class="line">	<span class="keyword">return</span> ans; </div><div class="line">&#125;</div><div class="line"><span class="function"><span class="keyword">int</span> <span class="title">change</span><span class="params">(<span class="keyword">int</span> x,<span class="keyword">int</span> delta)</span></span></div><div class="line">&#123;</div><div class="line">	<span class="keyword">for</span>(<span class="keyword">int</span> i=x;i&lt;=n;i+=lowbit(i))</div><div class="line">	 bit[i]+=delta;</div><div class="line">&#125;</div><div class="line"><span class="keyword">int</span> x,delta;</div><div class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></div><div class="line">&#123;</div><div class="line">	<span class="built_in">scanf</span>(<span class="string">"%d"</span>,&amp;n);</div><div class="line">	<span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;i++)</div><div class="line">	 <span class="built_in">scanf</span>(<span class="string">"%d"</span>,&amp;a[i]);</div><div class="line">	built();</div><div class="line">	<span class="built_in">scanf</span>(<span class="string">"%d%d"</span>,&amp;l,&amp;r); </div><div class="line">	<span class="built_in">printf</span>(<span class="string">"%d\n"</span>,sum(r)-sum(l<span class="number">-1</span>));</div><div class="line">	<span class="built_in">scanf</span>(<span class="string">"%d%d"</span>,&amp;x,&amp;delta);</div><div class="line">	change(x,delta);</div><div class="line">	<span class="built_in">scanf</span>(<span class="string">"%d%d"</span>,&amp;l,&amp;r);</div><div class="line">	<span class="built_in">printf</span>(<span class="string">"%d\n"</span>,sum(r)-sum(l<span class="number">-1</span>));</div><div class="line">&#125;</div></pre></td></tr></table></figure>
]]></content>
    
    <summary type="html">
    
      &lt;blockquote class=&quot;blockquote-center&quot;&gt;&lt;br&gt;  这不该是这样的～ –古尔丹&lt;br&gt;  时代变了！ &lt;/blockquote&gt;

&lt;p&gt;  实际上，很久以前就对wordpress中十分诡异的对中文字体的支持颇有微词了，而同时作为一个穷逼，并没有钱去获得全托管的网站，对于网站的CSS也是表示毫无权限。&lt;br&gt;  在经历了无穷无尽，水深火热的小白期后，终于成为了一个菜鸟，然后照着谷歌上的&lt;a href=&quot;https://http://opiece.me/2015/04/09/hexo-guide/&quot;&gt;教程&lt;/a&gt;终于成功的搭建起了自己的网站(想想也是很不容易)。&lt;br&gt;
    
    </summary>
    
    
      <category term="hexo" scheme="https://cybeird.tk/tags/hexo/"/>
    
  </entry>
  
  <entry>
    <title>Hello World</title>
    <link href="https://cybeird.tk/2016/10/19/hello-world/"/>
    <id>https://cybeird.tk/2016/10/19/hello-world/</id>
    <published>2016-10-19T12:58:33.280Z</published>
    <updated>2016-10-21T06:36:54.000Z</updated>
    
    <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/" target="_blank" rel="external">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/" target="_blank" rel="external">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html" target="_blank" rel="external">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues" target="_blank" rel="external">GitHub</a>.<br><a id="more"></a></p>
<h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ hexo new <span class="string">"My New Post"</span></div></pre></td></tr></table></figure>
<p>More info: <a href="https://hexo.io/docs/writing.html" target="_blank" rel="external">Writing</a></p>
<h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ hexo server</div></pre></td></tr></table></figure>
<p>More info: <a href="https://hexo.io/docs/server.html" target="_blank" rel="external">Server</a></p>
<h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ hexo generate</div></pre></td></tr></table></figure>
<p>More info: <a href="https://hexo.io/docs/generating.html" target="_blank" rel="external">Generating</a></p>
<h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ hexo deploy</div></pre></td></tr></table></figure>
<p>More info: <a href="https://hexo.io/docs/deployment.html" target="_blank" rel="external">Deployment</a></p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;Welcome to &lt;a href=&quot;https://hexo.io/&quot;&gt;Hexo&lt;/a&gt;! This is your very first post. Check &lt;a href=&quot;https://hexo.io/docs/&quot;&gt;documentation&lt;/a&gt; for more info. If you get any problems when using Hexo, you can find the answer in &lt;a href=&quot;https://hexo.io/docs/troubleshooting.html&quot;&gt;troubleshooting&lt;/a&gt; or you can ask me on &lt;a href=&quot;https://github.com/hexojs/hexo/issues&quot;&gt;GitHub&lt;/a&gt;.&lt;br&gt;
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>无休止加班的成因</title>
    <link href="https://cybeird.tk/2016/10/18/FromWordPress%20(22)/"/>
    <id>https://cybeird.tk/2016/10/18/FromWordPress (22)/</id>
    <published>2016-10-18T09:24:27.000Z</published>
    <updated>2016-10-23T02:22:00.000Z</updated>
    
    <content type="html"><![CDATA[<p>加班是互联网行业永远的痛，项目节点定下来后，为保证项目节奏，基本天昏地暗永无止境地加班，根本没有时间找女朋友。下面看看无休止加班的成因。</p>
<a id="more"></a>
<p><img src="http://ww3.sinaimg.cn/mw690/0064cTs2jw1f7ru3r6r87j30go0ci74r.jpg" alt=""></p>
<p><img src="http://ww2.sinaimg.cn/mw690/0064cTs2jw1f7ru3rjhh6j30go0ci0t6.jpg" alt=""></p>
<p><img src="http://ww2.sinaimg.cn/mw690/0064cTs2jw1f7ru3rnf5yj30go0ciwf4.jpg" alt=""></p>
<p><img src="http://ww2.sinaimg.cn/mw690/0064cTs2jw1f7ru3s1zjtj30go0ci0t1.jpg" alt=""></p>
<p><img src="http://ww4.sinaimg.cn/mw690/0064cTs2jw1f7ru3sizvdj30go0cigmq.jpg" alt=""></p>
<p><img src="http://ww2.sinaimg.cn/mw690/0064cTs2jw1f7ru3ssyz5j30go0ci74s.jpg" alt=""></p>
<p><img src="http://ww3.sinaimg.cn/mw690/0064cTs2jw1f7ru3t44loj30go0ci75d.jpg" alt=""></p>
<p><img src="http://ww3.sinaimg.cn/mw690/0064cTs2jw1f7ru3tbcy2j30go0cijso.jpg" alt=""></p>
<p><img src="http://ww3.sinaimg.cn/mw690/0064cTs2jw1f7ru3tlckzj30go0cijsc.jpg" alt=""></p>
<p><img src="http://ww3.sinaimg.cn/mw690/0064cTs2jw1f7ru3tuyzjj30go0ciwf4.jpg" alt=""></p>
<p><img src="http://ww1.sinaimg.cn/mw690/0064cTs2jw1f7ru3u6q0bj30go0ci754.jpg" alt=""></p>
<p><img src="http://ww1.sinaimg.cn/mw690/0064cTs2jw1f7ru3up85qj30go0ciq3c.jpg" alt=""></p>
<p><img src="http://ww2.sinaimg.cn/mw690/0064cTs2jw1f7ru3v3edvj30go0ci74r.jpg" alt=""></p>
<p><img src="http://ww2.sinaimg.cn/mw690/0064cTs2jw1f7ru3va85dj30go0ci0tc.jpg" alt=""></p>
<p><img src="http://ww1.sinaimg.cn/mw690/0064cTs2jw1f7ru3vd34wj30go0cijsm.jpg" alt=""></p>
<p><img src="http://ww2.sinaimg.cn/mw690/0064cTs2jw1f7rual7yb0j30go0cijsr.jpg" alt=""></p>
<p><img src="http://ww3.sinaimg.cn/mw690/0064cTs2jw1f7ru3vyu3lj30go0ciaai.jpg" alt=""></p>
<p><img src="http://ww3.sinaimg.cn/mw690/0064cTs2jw1f7ru3wbwn5j30go0cimxp.jpg" alt=""></p>
<p><img src="http://ww3.sinaimg.cn/mw690/0064cTs2jw1f7ru3wkcpgj30go0cit95.jpg" alt=""></p>
<p><img src="http://ww4.sinaimg.cn/mw690/0064cTs2jw1f7ru3wub02j30go0ciq3u.jpg" alt=""></p>
<p><img src="http://ww3.sinaimg.cn/mw690/0064cTs2jw1f7ru3x9d4aj30go0ciq3l.jpg" alt=""></p>
<p><img src="http://ww3.sinaimg.cn/mw690/0064cTs2jw1f7ru3xcnkaj30go0ciq3m.jpg" alt=""></p>
<p><img src="http://ww2.sinaimg.cn/mw690/0064cTs2jw1f7ru3xmymgj30go0ci0tl.jpg" alt=""></p>
<p><img src="http://ww4.sinaimg.cn/mw690/0064cTs2jw1f7ru3xwmozj30go0ci0t7.jpg" alt=""></p>
<p><img src="http://ww3.sinaimg.cn/mw690/0064cTs2jw1f7ru3y57tej30go0ci75s.jpg" alt=""></p>
<p><img src="http://ww1.sinaimg.cn/mw690/0064cTs2jw1f7ru3ykb41j30go0cigm7.jpg" alt=""></p>
<p><img src="http://ww1.sinaimg.cn/mw690/0064cTs2jw1f7ru3yu9iuj30go0ci3yy.jpg" alt=""></p>
<p><img src="http://ww2.sinaimg.cn/mw690/0064cTs2jw1f7ru3z34yrj30go0ci0t8.jpg" alt=""></p>
<p><img src="http://ww2.sinaimg.cn/mw690/0064cTs2jw1f7ru3zdaemj30go0cijs5.jpg" alt=""></p>
<p><img src="http://ww2.sinaimg.cn/mw690/0064cTs2jw1f7ru3zq8rdj30go0ci75i.jpg" alt=""></p>
<p><img src="http://ww2.sinaimg.cn/mw690/0064cTs2jw1f7ru400vikj30go0ciq3l.jpg" alt=""></p>
<p><img src="http://ww4.sinaimg.cn/mw690/0064cTs2jw1f7ru40gncjj30go0ciab8.jpg" alt=""></p>
<p><img src="http://ww4.sinaimg.cn/mw690/0064cTs2jw1f7ru40kziwj30go0cit9x.jpg" alt=""></p>
<p><img src="http://ww1.sinaimg.cn/mw690/0064cTs2jw1f7ru4111ncj30go0ciq3s.jpg" alt=""></p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;加班是互联网行业永远的痛，项目节点定下来后，为保证项目节奏，基本天昏地暗永无止境地加班，根本没有时间找女朋友。下面看看无休止加班的成因。&lt;/p&gt;
    
    </summary>
    
      <category term="ALL" scheme="https://cybeird.tk/categories/ALL/"/>
    
    
  </entry>
  
  <entry>
    <title>真的是很水的题目呢！(TOWQs)</title>
    <link href="https://cybeird.tk/2016/10/18/FromWordPress%20(26)/"/>
    <id>https://cybeird.tk/2016/10/18/FromWordPress (26)/</id>
    <published>2016-10-18T08:55:29.000Z</published>
    <updated>2016-10-23T02:22:00.000Z</updated>
    
    <content type="html"><![CDATA[<p>&nbsp;</p>
<p>恩，<a href="https://4.vijos.org:8888/p/1316" target="_blank" rel="external">这道题</a>实在是太水了，你既可以用桶排序也可以用set。反正搞一搞就出来了，我就不废话了；；</p>
<a id="more"></a>
<p><pre style="color:#000000;background:#f1f0f0;"><span style="color:#004a43;">#</span><span style="color:#004a43;">include </span><span style="color:#800000;">&lt;</span><span style="color:#40015a;">set</span><span style="color:#800000;">&gt;</span><br><span style="color:#004a43;">#</span><span style="color:#004a43;">include </span><span style="color:#800000;">&lt;</span><span style="color:#40015a;">cstdio</span><span style="color:#800000;">&gt;</span><br><span style="color:#400000;font-weight:bold;">using</span> <span style="color:#400000;font-weight:bold;">namespace</span> <span style="color:#00dddd;">std</span><span style="color:#806030;">;</span><br><span style="color:#400000;font-weight:bold;">int</span> n<span style="color:#806030;">,</span>tmp<span style="color:#806030;">;</span><br><span style="color:#800040;">set</span><span style="color:#806030;">&lt;</span><span style="color:#400000;font-weight:bold;">int</span><span style="color:#806030;">&gt;</span> S<span style="color:#806030;">;</span><br><span style="color:#800040;">set</span><span style="color:#806030;">&lt;</span><span style="color:#400000;font-weight:bold;">int</span><span style="color:#806030;">&gt;</span><span style="color:#806030;">::</span><span style="color:#800040;">iterator</span> it<span style="color:#806030;">;</span><br><span style="color:#400000;font-weight:bold;">int</span> <span style="color:#800000;font-weight:bold;">main</span><span style="color:#806030;">(</span><span style="color:#806030;">)</span><span style="color:#806030;">{</span><br>    <span style="color:#800040;">scanf</span><span style="color:#806030;">(</span><span style="color:#800000;">“</span><span style="color:#007997;">%d</span><span style="color:#800000;">“</span><span style="color:#806030;">,</span><span style="color:#806030;">&amp;</span>n<span style="color:#806030;">)</span><span style="color:#806030;">;</span><br>    <span style="color:#400000;font-weight:bold;">for</span> <span style="color:#806030;">(</span><span style="color:#400000;font-weight:bold;">int</span> i<span style="color:#806030;">=</span><span style="color:#c00000;">1</span><span style="color:#806030;">;</span>i<span style="color:#806030;">&lt;</span><span style="color:#806030;">=</span>n<span style="color:#806030;">;</span>i<span style="color:#806030;">+</span><span style="color:#806030;">+</span><span style="color:#806030;">)</span><span style="color:#806030;">{</span><br>        <span style="color:#800040;">scanf</span><span style="color:#806030;">(</span><span style="color:#800000;">“</span><span style="color:#007997;">%d</span><span style="color:#800000;">“</span><span style="color:#806030;">,</span><span style="color:#806030;">&amp;</span>tmp<span style="color:#806030;">)</span><span style="color:#806030;">;</span><br>        S<span style="color:#806030;">.</span>insert<span style="color:#806030;">(</span>tmp<span style="color:#806030;">)</span><span style="color:#806030;">;</span><br>    <span style="color:#806030;">}</span><br>    <span style="color:#800040;">printf</span><span style="color:#806030;">(</span><span style="color:#800000;">“</span><span style="color:#007997;">%d</span><span style="color:#0f6900;">\n</span><span style="color:#800000;">“</span><span style="color:#806030;">,</span>S<span style="color:#806030;">.</span>size<span style="color:#806030;">(</span><span style="color:#806030;">)</span><span style="color:#806030;">)</span><span style="color:#806030;">;</span><br>    <span style="color:#400000;font-weight:bold;">for</span> <span style="color:#806030;">(</span>it<span style="color:#806030;">=</span>S<span style="color:#806030;">.</span>begin<span style="color:#806030;">(</span><span style="color:#806030;">)</span><span style="color:#806030;">;</span>it<span style="color:#806030;">!</span><span style="color:#806030;">=</span>S<span style="color:#806030;">.</span>end<span style="color:#806030;">(</span><span style="color:#806030;">)</span><span style="color:#806030;">;</span>it<span style="color:#806030;">+</span><span style="color:#806030;">+</span><span style="color:#806030;">)</span><br>        <span style="color:#800040;">printf</span><span style="color:#806030;">(</span><span style="color:#800000;">“</span><span style="color:#007997;">%d</span> <span style="color:#800000;">“</span><span style="color:#806030;">,</span><span style="color:#806030;">*</span>it<span style="color:#806030;">)</span><span style="color:#806030;">;</span><br><span style="color:#806030;">}</span><br></pre><br>恩，就是这样。</p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&amp;nbsp;&lt;/p&gt;
&lt;p&gt;恩，&lt;a href=&quot;https://4.vijos.org:8888/p/1316&quot;&gt;这道题&lt;/a&gt;实在是太水了，你既可以用桶排序也可以用set。反正搞一搞就出来了，我就不废话了；；&lt;/p&gt;
    
    </summary>
    
      <category term="ALL" scheme="https://cybeird.tk/categories/ALL/"/>
    
      <category term="C++" scheme="https://cybeird.tk/categories/ALL/C/"/>
    
    
      <category term="C++" scheme="https://cybeird.tk/tags/C/"/>
    
      <category term="TOWQs" scheme="https://cybeird.tk/tags/TOWQs/"/>
    
      <category term="Trip Of WaterQuestions" scheme="https://cybeird.tk/tags/Trip-Of-WaterQuestions/"/>
    
  </entry>
  
  <entry>
    <title>How to kill yourself ? (1)</title>
    <link href="https://cybeird.tk/2016/10/18/how-to-kill-yourself-1/"/>
    <id>https://cybeird.tk/2016/10/18/how-to-kill-yourself-1/</id>
    <published>2016-10-18T08:06:30.000Z</published>
    <updated>2016-10-23T02:21:58.000Z</updated>
    
    <content type="html"><![CDATA[<p>无法提供摘要。这是一篇受保护的文章。</p>
<p><a href="https://cybirdy.wordpress.com/wp-admin" target="_blank" rel="external">继续阅读 →</a></p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;无法提供摘要。这是一篇受保护的文章。&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://cybirdy.wordpress.com/wp-admin&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;继续阅读 →&lt;/a&gt;&lt;/p&gt;

    
    </summary>
    
      <category term="ALL" scheme="https://cybeird.tk/categories/ALL/"/>
    
    
  </entry>
  
  <entry>
    <title>这和说好的不一样啊！(TOWQs)</title>
    <link href="https://cybeird.tk/2016/10/18/FromWordPress%20(29)/"/>
    <id>https://cybeird.tk/2016/10/18/FromWordPress (29)/</id>
    <published>2016-10-18T01:48:49.000Z</published>
    <updated>2016-10-23T02:21:58.000Z</updated>
    
    <content type="html"><![CDATA[<p>嗯，记得假期的时候马老师专门跟我们说过<a href="https://vijos.org/p/1776" target="_blank" rel="external">关押罪犯</a>这道题，他认为这道题可以说是二分答案的典型例题了~~然而。。。<a id="more"></a></p>
<p>为毛大家看到这道题的时候都是用的并查集呢(⊙o⊙)?（嗯，高老师用的爆搜我们就不必在意了）</p>
<p>虽然不知到为什么就连标签上都打上 “图结构 二分图” ，然而我依旧去用并查集去做。嗯，没有任何原因，就是要用并查集！(好吧，实际上就是单纯的不会二分图而已)</p>
<p>开一个两倍的并查集表示犯人的集合及其补集，排序按怨念从大到小往集合里放，发现冲突直接输出就可以了。</p>
<p>排序直接调用的中的 sort(a, a+n)。并查集是标准的一行式路径压缩，每次查找确认不冲突后分别放到对方的补集中。空间 O(2n)，时间 O(m lg<em>n)，其中 lg</em>n 最大为 5 效率很高，90分。</p>
<p>最后注意没有冲突要输出 0，这样才能 100 分。(高老师就是被这个坑了，但是我最开始就是为了骗分直接输出了零，拿了十分，所以最后写正解的时候没有被坑)<br>下面上代码：</p>
<p><pre style="color:#000000;background:#f1f0f0;"><span style="color:#004a43;">#</span><span style="color:#004a43;">include </span><span style="color:#800000;">&lt;</span><span style="color:#40015a;">algorithm</span><span style="color:#800000;">&gt;</span><br><span style="color:#004a43;">#</span><span style="color:#004a43;">include </span><span style="color:#800000;">&lt;</span><span style="color:#40015a;">iostream</span><span style="color:#800000;">&gt;</span><br><span style="color:#400000;font-weight:bold;">using</span> <span style="color:#400000;font-weight:bold;">namespace</span> <span style="color:#00dddd;">std</span><span style="color:#806030;">;</span><br><span style="color:#400000;font-weight:bold;">int</span> n<span style="color:#806030;">,</span>m<span style="color:#806030;">,</span>f<span style="color:#806030;">[</span><span style="color:#c00000;">40001</span><span style="color:#806030;">]</span><span style="color:#806030;">,</span>x<span style="color:#806030;">,</span>y<span style="color:#806030;">;</span><br><span style="color:#400000;font-weight:bold;">struct</span> data<br><span style="color:#806030;">{</span><br>    <span style="color:#400000;font-weight:bold;">int</span> a<span style="color:#806030;">,</span>b<span style="color:#806030;">,</span>c<span style="color:#806030;">;</span><br><span style="color:#806030;">}</span>e<span style="color:#806030;">[</span><span style="color:#c00000;">100001</span><span style="color:#806030;">]</span><span style="color:#806030;">;</span>     <span style="color:#c34e00;">//定义一个结构体来数据</span><br><span style="color:#400000;font-weight:bold;">bool</span> cmp<span style="color:#806030;">(</span><span style="color:#400000;font-weight:bold;">const</span> data <span style="color:#806030;">&amp;</span>a<span style="color:#806030;">,</span><span style="color:#400000;font-weight:bold;">const</span> data <span style="color:#806030;">&amp;</span>b<span style="color:#806030;">)</span><br><span style="color:#806030;">{</span><br>    <span style="color:#400000;font-weight:bold;">return</span> a<span style="color:#806030;">.</span>c<span style="color:#806030;">&gt;</span>b<span style="color:#806030;">.</span>c<span style="color:#806030;">;</span><br><span style="color:#806030;">}</span><span style="color:#c34e00;">//这样就可以按照怨气值进行从大到小的排序</span><br><span style="color:#c34e00;">//这么写和重载的做法，在速度上没什么区别，只不过尽量用默认的吧</span><br><span style="color:#c34e00;">//可读性嘛，不写得越多越好。</span><br><span style="color:#c34e00;">//如果能确定只可能有一种严格弱序，或者要求默认一种，那就应该用&lt;。</span><br><span style="color:#c34e00;">//如果在多种严格弱序，其中没一种比其它更值得当成默认的，那么就不应该用&lt;。</span><br><span style="color:#400000;font-weight:bold;">int</span> <span style="color:#800040;">find</span><span style="color:#806030;">(</span><span style="color:#400000;font-weight:bold;">int</span> x<span style="color:#806030;">)</span><br><span style="color:#806030;">{</span><br>    <span style="color:#400000;font-weight:bold;">return</span> f<span style="color:#806030;">[</span>x<span style="color:#806030;">]</span><span style="color:#806030;">=</span><span style="color:#806030;">=</span>x<span style="color:#806030;">?</span>x<span style="color:#806030;">:</span>f<span style="color:#806030;">[</span>x<span style="color:#806030;">]</span><span style="color:#806030;">=</span><span style="color:#800040;">find</span><span style="color:#806030;">(</span>f<span style="color:#806030;">[</span>x<span style="color:#806030;">]</span><span style="color:#806030;">)</span><span style="color:#806030;">;</span><br><span style="color:#806030;">}</span>        <span style="color:#c34e00;">//最简单的并查集运用</span><br><span style="color:#400000;font-weight:bold;">int</span> <span style="color:#800000;font-weight:bold;">main</span><span style="color:#806030;">(</span><span style="color:#806030;">)</span><br><span style="color:#806030;">{</span><br>    <span style="color:#800040;">cin</span><span style="color:#806030;">&gt;</span><span style="color:#806030;">&gt;</span>n<span style="color:#806030;">&gt;</span><span style="color:#806030;">&gt;</span>m<span style="color:#806030;">;</span><br>    <span style="color:#400000;font-weight:bold;">for</span><span style="color:#806030;">(</span><span style="color:#400000;font-weight:bold;">int</span> i<span style="color:#806030;">=</span><span style="color:#c00000;">1</span><span style="color:#806030;">;</span>i<span style="color:#806030;">&lt;</span><span style="color:#806030;">=</span>m<span style="color:#806030;">;</span>i<span style="color:#806030;">+</span><span style="color:#806030;">+</span><span style="color:#806030;">)</span><br>        <span style="color:#800040;">cin</span><span style="color:#806030;">&gt;</span><span style="color:#806030;">&gt;</span>e<span style="color:#806030;">[</span>i<span style="color:#806030;">]</span><span style="color:#806030;">.</span>a<span style="color:#806030;">&gt;</span><span style="color:#806030;">&gt;</span>e<span style="color:#806030;">[</span>i<span style="color:#806030;">]</span><span style="color:#806030;">.</span>b<span style="color:#806030;">&gt;</span><span style="color:#806030;">&gt;</span>e<span style="color:#806030;">[</span>i<span style="color:#806030;">]</span><span style="color:#806030;">.</span>c<span style="color:#806030;">;</span><br>    <span style="color:#400000;font-weight:bold;">for</span><span style="color:#806030;">(</span><span style="color:#400000;font-weight:bold;">int</span> i<span style="color:#806030;">=</span><span style="color:#c00000;">1</span><span style="color:#806030;">;</span>i<span style="color:#806030;">&lt;</span><span style="color:#806030;">=</span>n<span style="color:#806030;">*</span><span style="color:#c00000;">2</span><span style="color:#806030;">;</span>i<span style="color:#806030;">+</span><span style="color:#806030;">+</span><span style="color:#806030;">)</span><br>        f<span style="color:#806030;">[</span>i<span style="color:#806030;">]</span><span style="color:#806030;">=</span>i<span style="color:#806030;">;</span><br>    <span style="color:#800040;">sort</span><span style="color:#806030;">(</span>e<span style="color:#806030;">+</span><span style="color:#c00000;">1</span><span style="color:#806030;">,</span>e<span style="color:#806030;">+</span>m<span style="color:#806030;">+</span><span style="color:#c00000;">1</span><span style="color:#806030;">,</span>cmp<span style="color:#806030;">)</span><span style="color:#806030;">;</span><br>    <span style="color:#400000;font-weight:bold;">for</span><span style="color:#806030;">(</span><span style="color:#400000;font-weight:bold;">int</span> i<span style="color:#806030;">=</span><span style="color:#c00000;">1</span><span style="color:#806030;">;</span>i<span style="color:#806030;">&lt;</span><span style="color:#806030;">=</span>m<span style="color:#806030;">;</span>i<span style="color:#806030;">+</span><span style="color:#806030;">+</span><span style="color:#806030;">)</span><br>    <span style="color:#806030;">{</span><br>        x<span style="color:#806030;">=</span><span style="color:#800040;">find</span><span style="color:#806030;">(</span>e<span style="color:#806030;">[</span>i<span style="color:#806030;">]</span><span style="color:#806030;">.</span>a<span style="color:#806030;">)</span><span style="color:#806030;">;</span><br>        y<span style="color:#806030;">=</span><span style="color:#800040;">find</span><span style="color:#806030;">(</span>e<span style="color:#806030;">[</span>i<span style="color:#806030;">]</span><span style="color:#806030;">.</span>b<span style="color:#806030;">)</span><span style="color:#806030;">;</span><br>        <span style="color:#400000;font-weight:bold;">if</span><span style="color:#806030;">(</span>x<span style="color:#806030;">=</span><span style="color:#806030;">=</span>y<span style="color:#806030;">)</span><br>        <span style="color:#806030;">{</span><br>            <span style="color:#800040;">cout</span><span style="color:#806030;">&lt;</span><span style="color:#806030;">&lt;</span>e<span style="color:#806030;">[</span>i<span style="color:#806030;">]</span><span style="color:#806030;">.</span>c<span style="color:#806030;">;</span><br>            <span style="color:#400000;font-weight:bold;">return</span> <span style="color:#c00000;">0</span><span style="color:#806030;">;</span><br>        <span style="color:#806030;">}</span><br>        f<span style="color:#806030;">[</span>y<span style="color:#806030;">]</span> <span style="color:#806030;">=</span> <span style="color:#800040;">find</span><span style="color:#806030;">(</span>e<span style="color:#806030;">[</span>i<span style="color:#806030;">]</span><span style="color:#806030;">.</span>a <span style="color:#806030;">+</span> n<span style="color:#806030;">)</span><span style="color:#806030;">;</span><br>        f<span style="color:#806030;">[</span>x<span style="color:#806030;">]</span> <span style="color:#806030;">=</span> <span style="color:#800040;">find</span><span style="color:#806030;">(</span>e<span style="color:#806030;">[</span>i<span style="color:#806030;">]</span><span style="color:#806030;">.</span>b <span style="color:#806030;">+</span> n<span style="color:#806030;">)</span><span style="color:#806030;">;</span><br>    <span style="color:#806030;">} //因为已经对罪犯的仇恨值排过序了，所以直接尽可能的把仇恨值高的分开</span><br>    <span style="color:#800040;">cout</span><span style="color:#806030;">&lt;</span><span style="color:#806030;">&lt;</span><span style="color:#c00000;">0</span><span style="color:#806030;">;<br></span>    <span style="color:#400000;font-weight:bold;">return</span> <span style="color:#c00000;">0</span><span style="color:#806030;">;</span><br><span style="color:#806030;">}</span><br></pre><br>考虑到并查集的本职工作是维护某两点在一个集合，不能很好地处理不在一个集合的情况，所以我们要曲线救国，通过保存某个点的“敌人”集合来代表和他不在一个监狱的罪犯，间接地实现维护某两点不在一个集合的情况。在加入关系的时候进行判断，如果某两点已经在一个集合，说明他们无论如何也安排不到不同的两个监狱了，输出仇恨值即可。</p>
<p>（P.s 用并查集保存两点不在一个集合还可以使用对立点的方式，即给每一个实点都建立一个与之对立的虚点。当读取到A与B不在同一集合的信息时，将A与B’，B与A’分别连边，这样也可以表示A与B不在同一集合。判断过程与上面的方法相同，实现起来也很简单，大家不妨试一下）『犯罪团伙这道题可以说是这个思路，可以一做』</p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;嗯，记得假期的时候马老师专门跟我们说过&lt;a href=&quot;https://vijos.org/p/1776&quot;&gt;关押罪犯&lt;/a&gt;这道题，他认为这道题可以说是二分答案的典型例题了~~然而。。。
    
    </summary>
    
      <category term="ALL" scheme="https://cybeird.tk/categories/ALL/"/>
    
      <category term="C++" scheme="https://cybeird.tk/categories/ALL/C/"/>
    
    
      <category term="C++" scheme="https://cybeird.tk/tags/C/"/>
    
      <category term="TOWQs" scheme="https://cybeird.tk/tags/TOWQs/"/>
    
      <category term="Trip Of WaterQuestions" scheme="https://cybeird.tk/tags/Trip-Of-WaterQuestions/"/>
    
      <category term="并查集" scheme="https://cybeird.tk/tags/%E5%B9%B6%E6%9F%A5%E9%9B%86/"/>
    
      <category term="二分答案" scheme="https://cybeird.tk/tags/%E4%BA%8C%E5%88%86%E7%AD%94%E6%A1%88/"/>
    
  </entry>
  
  <entry>
    <title>『2』我要入门！矩阵？辣鸡！[Uva 442](TOWQs)</title>
    <link href="https://cybeird.tk/2016/10/16/FromWordPress%20(4)/"/>
    <id>https://cybeird.tk/2016/10/16/FromWordPress (4)/</id>
    <published>2016-10-16T11:12:27.000Z</published>
    <updated>2016-10-23T02:21:58.000Z</updated>
    
    <content type="html"><![CDATA[<p>嗯，今天要刷的水题是一道<a href="https://uva.onlinejudge.org/index.php?option=onlinejudge&amp;page=show_problem&amp;problem=383" target="_blank" rel="external">看起来很难的题目</a>，因为当我们看到矩阵的时候难免会有‘一阵阵的恶心’，但是再仔细读了题意之后就会发现，这是一道很辣鸡的水题。<a id="more"></a></p>
<h4 id="仔细瞅瞅"><a href="#仔细瞅瞅" class="headerlink" title="仔细瞅瞅"></a>仔细瞅瞅</h4><p>发现本题的关键就是解析表达式，而比较简单的解析表达式可以借助栈来完成。<br>代码如下：</p>
<p><pre style="color:#000000;background:#f1f0f0;"><span style="color:#004a43;">#</span><span style="color:#004a43;">include </span><span style="color:#800000;">&lt;</span><span style="color:#40015a;">iostream</span><span style="color:#800000;">&gt;</span><br><span style="color:#004a43;">#</span><span style="color:#004a43;">include </span><span style="color:#800000;">&lt;</span><span style="color:#40015a;">cstring</span><span style="color:#800000;">&gt;</span><br><span style="color:#004a43;">#</span><span style="color:#004a43;">include </span><span style="color:#800000;">&lt;</span><span style="color:#40015a;">algorithm</span><span style="color:#800000;">&gt;</span><br><span style="color:#004a43;">#</span><span style="color:#004a43;">include </span><span style="color:#800000;">&lt;</span><span style="color:#40015a;">cstdio</span><span style="color:#800000;">&gt;</span><br><span style="color:#004a43;">#</span><span style="color:#004a43;">include </span><span style="color:#800000;">&lt;</span><span style="color:#40015a;">stack</span><span style="color:#800000;">&gt;</span><br><span style="color:#400000;font-weight:bold;">using</span> <span style="color:#400000;font-weight:bold;">namespace</span> <span style="color:#00dddd;">std</span><span style="color:#806030;">;</span></pre></p>
<p><span style="color:#400000;font-weight:bold;">struct</span> Matrix<span style="color:#806030;">{</span><br>    <span style="color:#400000;font-weight:bold;">int</span> a<span style="color:#806030;">,</span>b<span style="color:#806030;">;</span><br>    Matrix<span style="color:#806030;">(</span><span style="color:#400000;font-weight:bold;">int</span> a<span style="color:#806030;">=</span><span style="color:#c00000;">0</span><span style="color:#806030;">,</span> <span style="color:#400000;font-weight:bold;">int</span> b<span style="color:#806030;">=</span><span style="color:#c00000;">0</span><span style="color:#806030;">)</span><span style="color:#806030;">:</span>a<span style="color:#806030;">(</span>a<span style="color:#806030;">)</span><span style="color:#806030;">,</span>b<span style="color:#806030;">(</span>b<span style="color:#806030;">)</span> <span style="color:#806030;">{</span><span style="color:#806030;">}</span>   <span style="color:#c34e00;">//定义一个结构体，这一步是构造函数</span><br><span style="color:#806030;">}</span>m<span style="color:#806030;">[</span><span style="color:#c00000;">26</span><span style="color:#806030;">]</span><span style="color:#806030;">;</span></p>
<p><span style="color:#800040;">stack</span><span style="color:#806030;">&lt;</span>Matrix<span style="color:#806030;">&gt;</span> s<span style="color:#806030;">;</span></p>
<p><span style="color:#400000;font-weight:bold;">int</span> <span style="color:#800000;font-weight:bold;">main</span><span style="color:#806030;">(</span><span style="color:#806030;">)</span><br><span style="color:#806030;">{</span><br>    <span style="color:#400000;font-weight:bold;">int</span> n<span style="color:#806030;">;</span><br>    <span style="color:#800040;">cin</span> <span style="color:#806030;">&gt;</span><span style="color:#806030;">&gt;</span> n<span style="color:#806030;">;</span><br>    <span style="color:#400000;font-weight:bold;">for</span><span style="color:#806030;">(</span><span style="color:#400000;font-weight:bold;">int</span> i <span style="color:#806030;">=</span> <span style="color:#c00000;">0</span><span style="color:#806030;">;</span> i <span style="color:#806030;">&lt;</span> n<span style="color:#806030;">;</span> i<span style="color:#806030;">+</span><span style="color:#806030;">+</span><span style="color:#806030;">)</span><span style="color:#806030;">{</span><br>        <span style="color:#800040;">string</span> name<span style="color:#806030;">;</span><br>        <span style="color:#800040;">cin</span> <span style="color:#806030;">&gt;</span><span style="color:#806030;">&gt;</span> name<span style="color:#806030;">;</span><br>        <span style="color:#400000;font-weight:bold;">int</span> k <span style="color:#806030;">=</span> name<span style="color:#806030;">[</span><span style="color:#c00000;">0</span><span style="color:#806030;">]</span> <span style="color:#806030;">-</span> <span style="color:#008000;">‘A’</span><span style="color:#806030;">;</span><br>        <span style="color:#800040;">cin</span> <span style="color:#806030;">&gt;</span><span style="color:#806030;">&gt;</span> m<span style="color:#806030;">[</span>k<span style="color:#806030;">]</span><span style="color:#806030;">.</span>a <span style="color:#806030;">&gt;</span><span style="color:#806030;">&gt;</span> m<span style="color:#806030;">[</span>k<span style="color:#806030;">]</span><span style="color:#806030;">.</span>b<span style="color:#806030;">;</span><br>    <span style="color:#806030;">}</span>  <span style="color:#c34e00;">//嗯，这样就读入了数据</span><br>    <span style="color:#800040;">string</span> expr<span style="color:#806030;">;</span><br>    <span style="color:#400000;font-weight:bold;">while</span><span style="color:#806030;">(</span><span style="color:#800040;">cin</span> <span style="color:#806030;">&gt;</span><span style="color:#806030;">&gt;</span> expr<span style="color:#806030;">)</span> <span style="color:#806030;">{</span><br>        <span style="color:#400000;font-weight:bold;">int</span> len <span style="color:#806030;">=</span> expr<span style="color:#806030;">.</span>length<span style="color:#806030;">(</span><span style="color:#806030;">)</span><span style="color:#806030;">;</span>        <span style="color:#c34e00;">//用len来保存长度</span><br>        <span style="color:#400000;font-weight:bold;">bool</span> error <span style="color:#806030;">=</span> <span style="color:#400000;font-weight:bold;">false</span><span style="color:#806030;">;</span><br>        <span style="color:#400000;font-weight:bold;">int</span> ans <span style="color:#806030;">=</span> <span style="color:#c00000;">0</span><span style="color:#806030;">;</span><br>        <span style="color:#400000;font-weight:bold;">for</span><span style="color:#806030;">(</span><span style="color:#400000;font-weight:bold;">int</span> i <span style="color:#806030;">=</span> <span style="color:#c00000;">0</span><span style="color:#806030;">;</span> i <span style="color:#806030;">&lt;</span> len<span style="color:#806030;">;</span> i<span style="color:#806030;">+</span><span style="color:#806030;">+</span><span style="color:#806030;">)</span><span style="color:#806030;">{</span><br>            <span style="color:#400000;font-weight:bold;">if</span><span style="color:#806030;">(</span> <span style="color:#800040;">isalpha</span><span style="color:#806030;">(</span>expr<span style="color:#806030;">[</span>i<span style="color:#806030;">]</span><span style="color:#806030;">)</span> <span style="color:#806030;">)</span> s<span style="color:#806030;">.</span>push<span style="color:#806030;">(</span>m<span style="color:#806030;">[</span>expr<span style="color:#806030;">[</span>i<span style="color:#806030;">]</span> <span style="color:#806030;">-</span> <span style="color:#008000;">‘A’</span><span style="color:#806030;">]</span><span style="color:#806030;">)</span><span style="color:#806030;">;</span><br>            <span style="color:#400000;font-weight:bold;">else</span> <span style="color:#400000;font-weight:bold;">if</span><span style="color:#806030;">(</span>expr<span style="color:#806030;">[</span>i<span style="color:#806030;">]</span> <span style="color:#806030;">=</span><span style="color:#806030;">=</span> <span style="color:#008000;">‘)’</span><span style="color:#806030;">)</span> <span style="color:#806030;">{</span><br>                Matrix m2 <span style="color:#806030;">=</span> s<span style="color:#806030;">.</span>top<span style="color:#806030;">(</span><span style="color:#806030;">)</span><span style="color:#806030;">;</span> s<span style="color:#806030;">.</span>pop<span style="color:#806030;">(</span><span style="color:#806030;">)</span><span style="color:#806030;">;</span><br>                Matrix m1 <span style="color:#806030;">=</span> s<span style="color:#806030;">.</span>top<span style="color:#806030;">(</span><span style="color:#806030;">)</span><span style="color:#806030;">;</span> s<span style="color:#806030;">.</span>pop<span style="color:#806030;">(</span><span style="color:#806030;">)</span><span style="color:#806030;">;</span><br>                <span style="color:#400000;font-weight:bold;">if</span> <span style="color:#806030;">(</span>m1<span style="color:#806030;">.</span>b <span style="color:#806030;">!</span><span style="color:#806030;">=</span> m2<span style="color:#806030;">.</span>a<span style="color:#806030;">)</span><span style="color:#806030;">{</span> error <span style="color:#806030;">=</span> true<span style="color:#806030;">;</span> <span style="color:#400000;font-weight:bold;">break</span><span style="color:#806030;">;</span> <span style="color:#806030;">}</span><br>                                        <span style="color:#c34e00;">//若A的行数不等于B的列数，则乘法无法运行</span><br>                ans <span style="color:#806030;">+</span><span style="color:#806030;">=</span> m1<span style="color:#806030;">.</span>a <span style="color:#806030;"><em></em></span> m1<span style="color:#806030;">.</span>b <span style="color:#806030;"></span> m2<span style="color:#806030;">.</span>b<span style="color:#806030;">;</span><br>                s<span style="color:#806030;">.</span>push<span style="color:#806030;">(</span>Matrix<span style="color:#806030;">(</span>m1<span style="color:#806030;">.</span>a<span style="color:#806030;">,</span> m2<span style="color:#806030;">.</span>b<span style="color:#806030;">)</span><span style="color:#806030;">)</span><span style="color:#806030;">;</span><br>            <span style="color:#806030;">}</span>           <span style="color:#c34e00;">//当我们遇到右括号时出栈并计算，然后结果入栈</span><br>        <span style="color:#806030;">}</span><br>        <span style="color:#400000;font-weight:bold;">if</span><span style="color:#806030;">(</span>error<span style="color:#806030;">)</span> <span style="color:#800040;">printf</span><span style="color:#806030;">(</span><span style="color:#800000;">“</span><span style="color:#e60000;">error</span><span style="color:#0f6900;">\n</span><span style="color:#800000;">“</span><span style="color:#806030;">)</span><span style="color:#806030;">;</span><br>        <span style="color:#400000;font-weight:bold;">else</span> <span style="color:#800040;">printf</span><span style="color:#806030;">(</span><span style="color:#800000;">“</span><span style="color:#007997;">%d</span><span style="color:#0f6900;">\n</span><span style="color:#800000;">“</span><span style="color:#806030;">,</span> ans<span style="color:#806030;">)</span><span style="color:#806030;">;</span><br>    <span style="color:#806030;">}</span><br>    <span style="color:#400000;font-weight:bold;">return</span> <span style="color:#c00000;">0</span><span style="color:#806030;">;</span><br><span style="color:#806030;">}</span><br><br>注意到底下的算式中每两个需要相乘的矩阵都会放在一个括号中，不会出现(ABC)这样的算式。因此，每遇到一个右括号就代表要将括号之前的两个矩阵进行矩阵乘法。我们可以使用一个栈来模拟这个过程：</p>
<ul>
<li>右括号 : 不用搭理它</li>
<li>矩阵名称 : 压栈</li>
<li>右括号 : 弹出栈中的前两个，进行乘法运算，将结果压栈<br>由此便可以模拟整个表达式的计算过程。我们可以用一个 pair 来表示矩阵的行数和列数，矩阵乘法的过程请参考《线性代数》。在前面的 res 函数中计算结果，如果遇到了没法相乘的矩阵就输出 error。这个函数可以计算结果矩阵的行数和列数并返回相乘的总次数。我们只需要将结果加起来就可以得到结果了。另外，如果表达式只有一个矩阵的话，表达式长度必为 1，直接输出结果 0。</li>
</ul>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;嗯，今天要刷的水题是一道&lt;a href=&quot;https://uva.onlinejudge.org/index.php?option=onlinejudge&amp;amp;page=show_problem&amp;amp;problem=383&quot;&gt;看起来很难的题目&lt;/a&gt;，因为当我们看到矩阵的时候难免会有‘一阵阵的恶心’，但是再仔细读了题意之后就会发现，这是一道很辣鸡的水题。
    
    </summary>
    
      <category term="ALL" scheme="https://cybeird.tk/categories/ALL/"/>
    
      <category term="C++" scheme="https://cybeird.tk/categories/ALL/C/"/>
    
    
      <category term="C++" scheme="https://cybeird.tk/tags/C/"/>
    
      <category term="TOWQs" scheme="https://cybeird.tk/tags/TOWQs/"/>
    
      <category term="Trip Of WaterQuestions" scheme="https://cybeird.tk/tags/Trip-Of-WaterQuestions/"/>
    
      <category term="正常的标题" scheme="https://cybeird.tk/tags/%E6%AD%A3%E5%B8%B8%E7%9A%84%E6%A0%87%E9%A2%98/"/>
    
      <category term="stack" scheme="https://cybeird.tk/tags/stack/"/>
    
      <category term="我要入门" scheme="https://cybeird.tk/tags/%E6%88%91%E8%A6%81%E5%85%A5%E9%97%A8/"/>
    
  </entry>
  
  <entry>
    <title>真是令人感到欣慰:一个千古谜题终被解决！</title>
    <link href="https://cybeird.tk/2016/10/16/FromWordPress%20(24)/"/>
    <id>https://cybeird.tk/2016/10/16/FromWordPress (24)/</id>
    <published>2016-10-16T02:03:00.000Z</published>
    <updated>2016-10-23T02:22:00.000Z</updated>
    
    <content type="html"><![CDATA[<p>相信大家都知道我是一个穷逼，所以只有像(cybirdy.<span style="color:#ff0000;">wordpress</span>.com)这样的免费域名，所以，：</p>
<h3 id="根本没法做到：像代码高亮这样的东西！"><a href="#根本没法做到：像代码高亮这样的东西！" class="headerlink" title="根本没法做到：像代码高亮这样的东西！"></a>根本没法做到：像代码高亮这样的东西！</h3><p>但是！却找到了一个简单暴力的代码高亮的方式！没错，连插件的用不着，直接暴力的在HTML里面进行“交易”； <a href="https://cybirdy.wordpress.com/2016/10/15/%e6%9c%89%e8%b6%a3%e7%9a%84%e9%80%9a%e7%9f%a5/" target="_blank" rel="external">详情见</a></p>
<p>然后就简单的记录一下这个<a href="https://tohtml.com/cpp/" target="_blank" rel="external">网站</a></p>
<p>反正也没人看QAQ</p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;相信大家都知道我是一个穷逼，所以只有像(cybirdy.&lt;span style=&quot;color:#ff0000;&quot;&gt;wordpress&lt;/span&gt;.com)这样的免费域名，所以，：&lt;/p&gt;
&lt;h3 id=&quot;根本没法做到：像代码高亮这样的东西！&quot;&gt;&lt;a href=&quot;#根本没法
    
    </summary>
    
      <category term="ALL" scheme="https://cybeird.tk/categories/ALL/"/>
    
    
  </entry>
  
  <entry>
    <title>『1』我要入门！[UVa 514](TOWQs)</title>
    <link href="https://cybeird.tk/2016/10/14/FromWordPress%20(3)/"/>
    <id>https://cybeird.tk/2016/10/14/FromWordPress (3)/</id>
    <published>2016-10-14T02:10:46.000Z</published>
    <updated>2016-10-23T02:21:58.000Z</updated>
    
    <content type="html"><![CDATA[<p>好的，今天就是要先走一遍这<a href="https://uva.onlinejudge.org/index.php?option=com_onlinejudge&amp;Itemid=8&amp;page=show_problem&amp;problem=455" target="_blank" rel="external">一道题目</a>。恩，就是简单的运用一下栈(stack)而已；<a id="more"></a></p>
<blockquote>
<h3 id="题目描述："><a href="#题目描述：" class="headerlink" title="题目描述："></a>题目描述：</h3><p>某城市有一个火车站，有n节车厢从A方向驶入车站，按进站的顺序编号为1-n.你的任务是判断是否能让它们按照某种特定的顺序进入B方向的铁轨并驶入车站。例如，出栈顺序（5 4 1 2 3）是不可能的，但是（5 4 3 2 1）是可能的。</p>
<h3 id="题目分析："><a href="#题目分析：" class="headerlink" title="题目分析："></a><strong>题目分析：</strong></h3><p>为了重组车厢，借助中转站，对于每个车厢，一旦从A移入C就不能回到A了，一旦从C移入B，就不能回到C了，意思就是A-&gt;C和C-&gt;B。而且在中转站C中，车厢符合后进先出的原则。故这里可以看做为一个栈。</p>
<p><img src="http://img.blog.csdn.net/20140803091134595" alt=""><br>恩，我实在是找不到中文的题目描述了，只好把入门经典的原题目描述给粘过来了。</p>
</blockquote>
<p>嗯，相信大家第一眼看到这道题目就是用栈来解决，而我们的c++刚好有一个 stack 的头文件，紧接着，神奇的事情发生了！没错，这道题就写出来了！(嗯，并不是逗比)</p>
<p>好了，废话不多说，看代码！</p>
<p><pre style="color:#000000;background:#f1f0f0;"><span style="color:#004a43;">#</span><span style="color:#004a43;">include </span><span style="color:#800000;">&lt;</span><span style="color:#40015a;">iostream</span><span style="color:#800000;">&gt;</span><br><span style="color:#004a43;">#</span><span style="color:#004a43;">include </span><span style="color:#800000;">&lt;</span><span style="color:#40015a;">cstdio</span><span style="color:#800000;">&gt;</span><br><span style="color:#004a43;">#</span><span style="color:#004a43;">include </span><span style="color:#800000;">&lt;</span><span style="color:#40015a;">cstring</span><span style="color:#800000;">&gt;</span><br><span style="color:#004a43;">#</span><span style="color:#004a43;">include </span><span style="color:#800000;">&lt;</span><span style="color:#40015a;">algorithm</span><span style="color:#800000;">&gt;</span><br><span style="color:#004a43;">#</span><span style="color:#004a43;">include </span><span style="color:#800000;">&lt;</span><span style="color:#40015a;">stack</span><span style="color:#800000;">&gt;</span><br><span style="color:#400000;font-weight:bold;">using</span> <span style="color:#400000;font-weight:bold;">namespace</span> <span style="color:#00dddd;">std</span><span style="color:#806030;">;</span><br><span style="color:#400000;font-weight:bold;">const</span> <span style="color:#400000;font-weight:bold;">int</span> MAXN <span style="color:#806030;">=</span> <span style="color:#c00000;">1000</span> <span style="color:#806030;">+</span> <span style="color:#c00000;">10</span><span style="color:#806030;">;</span><br><span style="color:#400000;font-weight:bold;">int</span> n<span style="color:#806030;">,</span> rail<span style="color:#806030;">[</span>MAXN<span style="color:#806030;">]</span><span style="color:#806030;">;</span><br><span style="color:#400000;font-weight:bold;">int</span> <span style="color:#800000;font-weight:bold;">main</span><span style="color:#806030;">(</span><span style="color:#806030;">)</span><br><span style="color:#806030;">{</span><br>    <span style="color:#400000;font-weight:bold;">while</span><span style="color:#806030;">(</span><span style="color:#800040;">scanf</span><span style="color:#806030;">(</span><span style="color:#800000;">“</span><span style="color:#007997;">%d</span><span style="color:#800000;">“</span><span style="color:#806030;">,</span> <span style="color:#806030;">&amp;</span>n<span style="color:#806030;">)</span> <span style="color:#806030;">=</span><span style="color:#806030;">=</span> <span style="color:#c00000;">1</span> <span style="color:#806030;">&amp;</span><span style="color:#806030;">&amp;</span> n<span style="color:#806030;">)</span><span style="color:#806030;">{</span><br>        <span style="color:#800040;">stack</span> s<span style="color:#806030;">;</span><br>        <span style="color:#400000;font-weight:bold;">int</span> A <span style="color:#806030;">=</span> <span style="color:#c00000;">1</span><span style="color:#806030;">,</span> B <span style="color:#806030;">=</span> <span style="color:#c00000;">1</span><span style="color:#806030;">;</span><br>        <span style="color:#400000;font-weight:bold;">for</span><span style="color:#806030;">(</span><span style="color:#400000;font-weight:bold;">int</span> i <span style="color:#806030;">=</span> <span style="color:#c00000;">1</span><span style="color:#806030;">;</span> i <span style="color:#806030;">&lt;</span><span style="color:#806030;">=</span> n<span style="color:#806030;">;</span> i<span style="color:#806030;">+</span><span style="color:#806030;">+</span><span style="color:#806030;">)</span><br>            <span style="color:#800040;">scanf</span><span style="color:#806030;">(</span><span style="color:#800000;">“</span><span style="color:#007997;">%d</span><span style="color:#800000;">“</span><span style="color:#806030;">,</span> <span style="color:#806030;">&amp;</span>rail<span style="color:#806030;">[</span>i<span style="color:#806030;">]</span><span style="color:#806030;">)</span><span style="color:#806030;">;</span>    <span style="color:#c34e00;">//读入出站时车厢编号 </span><br>        <span style="color:#400000;font-weight:bold;">int</span> ok <span style="color:#806030;">=</span> <span style="color:#c00000;">1</span><span style="color:#806030;">;</span><br>        <span style="color:#400000;font-weight:bold;">while</span><span style="color:#806030;">(</span>B <span style="color:#806030;">&lt;</span><span style="color:#806030;">=</span> n<span style="color:#806030;">)</span><span style="color:#806030;">{</span><br>            <span style="color:#400000;font-weight:bold;">if</span><span style="color:#806030;">(</span>A <span style="color:#806030;">=</span><span style="color:#806030;">=</span> rail<span style="color:#806030;">[</span>B<span style="color:#806030;">]</span><span style="color:#806030;">)</span> <span style="color:#806030;">{</span> A<span style="color:#806030;">+</span><span style="color:#806030;">+</span><span style="color:#806030;">;</span> B<span style="color:#806030;">+</span><span style="color:#806030;">+</span><span style="color:#806030;">;</span> <span style="color:#806030;">}</span>  <span style="color:#c34e00;">//若A中第一个满足，则出 </span><br>            <span style="color:#400000;font-weight:bold;">else</span> <span style="color:#400000;font-weight:bold;">if</span><span style="color:#806030;">(</span><span style="color:#806030;">!</span>s<span style="color:#806030;">.</span>empty<span style="color:#806030;">(</span><span style="color:#806030;">)</span> <span style="color:#806030;">&amp;</span><span style="color:#806030;">&amp;</span> s<span style="color:#806030;">.</span>top<span style="color:#806030;">(</span><span style="color:#806030;">)</span> <span style="color:#806030;">=</span><span style="color:#806030;">=</span> rail<span style="color:#806030;">[</span>B<span style="color:#806030;">]</span><span style="color:#806030;">)</span><br>                             <span style="color:#806030;">{</span> s<span style="color:#806030;">.</span>pop<span style="color:#806030;">(</span><span style="color:#806030;">)</span><span style="color:#806030;">;</span> B<span style="color:#806030;">+</span><span style="color:#806030;">+</span><span style="color:#806030;">;</span> <span style="color:#806030;">}</span>    <span style="color:#c34e00;">//若Station中第一个满足，出 </span><br>            <span style="color:#400000;font-weight:bold;">else</span> <span style="color:#400000;font-weight:bold;">if</span><span style="color:#806030;">(</span>A <span style="color:#806030;">&lt;</span><span style="color:#806030;">=</span> n<span style="color:#806030;">)</span><br>                              s<span style="color:#806030;">.</span>push<span style="color:#806030;">(</span>A<span style="color:#806030;">+</span><span style="color:#806030;">+</span><span style="color:#806030;">)</span><span style="color:#806030;">;</span>    <span style="color:#c34e00;">//若不满足，再从A中开一节进Station </span><br>            <span style="color:#400000;font-weight:bold;">else</span> <span style="color:#806030;">{</span> ok <span style="color:#806030;">=</span> <span style="color:#c00000;">0</span><span style="color:#806030;">;</span> <span style="color:#400000;font-weight:bold;">break</span><span style="color:#806030;">;</span> <span style="color:#806030;">}</span>    <span style="color:#c34e00;">//要A里没车了，就炸了吧</span><br>        <span style="color:#806030;">}</span><br>        <span style="color:#800040;">printf</span><span style="color:#806030;">(</span><span style="color:#800000;">“</span><span style="color:#007997;">%s</span><span style="color:#0f6900;">\n</span><span style="color:#800000;">“</span><span style="color:#806030;">,</span> ok <span style="color:#806030;">?</span> <span style="color:#800000;">“</span><span style="color:#e60000;">Yes</span><span style="color:#800000;">“</span> <span style="color:#806030;">:</span> <span style="color:#800000;">“</span><span style="color:#e60000;">No</span><span style="color:#800000;">“</span><span style="color:#806030;">)</span><span style="color:#806030;">;</span><br>    <span style="color:#806030;">}</span><br>    <span style="color:#400000;font-weight:bold;">return</span> <span style="color:#c00000;">0</span><span style="color:#806030;">;</span><br><span style="color:#806030;">}</span><br></pre><br>是这样没错，就是简单的一层层判断，如果判断到最后发现不行那么就真的不行，相信配合注释应该很好理解；用 if else 就可以做出来的一道水题！</p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;好的，今天就是要先走一遍这&lt;a href=&quot;https://uva.onlinejudge.org/index.php?option=com_onlinejudge&amp;amp;Itemid=8&amp;amp;page=show_problem&amp;amp;problem=455&quot;&gt;一道题目&lt;/a&gt;。恩，就是简单的运用一下栈(stack)而已；
    
    </summary>
    
      <category term="ALL" scheme="https://cybeird.tk/categories/ALL/"/>
    
      <category term="C++" scheme="https://cybeird.tk/categories/ALL/C/"/>
    
    
      <category term="C++" scheme="https://cybeird.tk/tags/C/"/>
    
      <category term="TOWQs" scheme="https://cybeird.tk/tags/TOWQs/"/>
    
      <category term="Trip Of WaterQuestions" scheme="https://cybeird.tk/tags/Trip-Of-WaterQuestions/"/>
    
      <category term="数据结构基础" scheme="https://cybeird.tk/tags/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E5%9F%BA%E7%A1%80/"/>
    
      <category term="正常的标题" scheme="https://cybeird.tk/tags/%E6%AD%A3%E5%B8%B8%E7%9A%84%E6%A0%87%E9%A2%98/"/>
    
      <category term="我要入门" scheme="https://cybeird.tk/tags/%E6%88%91%E8%A6%81%E5%85%A5%E9%97%A8/"/>
    
      <category term="栈" scheme="https://cybeird.tk/tags/%E6%A0%88/"/>
    
  </entry>
  
  <entry>
    <title>Gooooloooowoooocooo！{鱼人语：好水的题啊!}(TOWQs)</title>
    <link href="https://cybeird.tk/2016/10/11/gooooloooowoooocooo/"/>
    <id>https://cybeird.tk/2016/10/11/gooooloooowoooocooo/</id>
    <published>2016-10-11T13:01:34.000Z</published>
    <updated>2016-10-23T06:21:14.000Z</updated>
    
    <content type="html"><![CDATA[<p>如果奇迹有颜色，那么一定是“vijos上的橙名！”色；；</p>
<p>没错，为了RP而奋斗的我，又一次的在<a href="https://vijos.org/training" target="_blank" rel="external">训练营</a>中发现了一道十分水的<a href="https://vijos.org/p/1130" target="_blank" rel="external">题目</a>！<a id="more"></a></p>
<p>这道题我的第一印象果断是暴力啊！原来还准备专门写个函数，<br><figure class="highlight"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div></pre></td><td class="code"><pre><div class="line">int dfs(int x)&#123;</div><div class="line">    int half,sum=1;</div><div class="line">    if(x%2==0)</div><div class="line">        half=x/2;</div><div class="line">    else</div><div class="line">        half=(x-1)/2;</div><div class="line">    for(int i=1;i&amp;lt;=half;i++)</div><div class="line">        sum+=dfs(i);</div><div class="line">    return sum;</div><div class="line"> &#125;`&lt;/pre&gt;</div></pre></td></tr></table></figure></p>
<pre><code>当然，也并非一定要整个函数出来，恩；
</code></pre><figure class="highlight c++"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div></pre></td><td class="code"><pre><div class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cstdio&gt;</span></span></div><div class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</div><div class="line">    <span class="keyword">int</span> dp[<span class="number">1001</span>],n;</div><div class="line">    dp[<span class="number">1</span>] = <span class="number">1</span>;</div><div class="line">    <span class="built_in">scanf</span>(<span class="string">"%d"</span>,&amp;n);</div><div class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">2</span>;i &lt;= n;i++) &#123;</div><div class="line">        dp[i] = dp[i<span class="number">-1</span>];</div><div class="line">        <span class="keyword">if</span> (!(i%<span class="number">2</span>)) dp[i] += dp[i/<span class="number">2</span>];</div><div class="line">    &#125;</div><div class="line">    <span class="built_in">printf</span>(<span class="string">"%d"</span>,dp[n]);</div><div class="line">    <span class="keyword">return</span> <span class="number">0</span>;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<p>恩，至于思路么，很简单。</p>
<blockquote>
<p>茬它的左边加上一个自然数，但该自然数不能超过原数的一半;<br>然后我们就从该自然数左边第一位开始枚举，然后对于每一种可能的第一位，再次进行枚举，然后对于枚举出来的第一位的第一位(也就是第二位)，进行枚举，然后再对枚举出来的。。。</p>
</blockquote>
<p>反正就是这么个思路，相信大家不会的看看代码就懂了，毕竟是很水的题目莫；</p>
<p>&nbsp;</p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;如果奇迹有颜色，那么一定是“vijos上的橙名！”色；；&lt;/p&gt;
&lt;p&gt;没错，为了RP而奋斗的我，又一次的在&lt;a href=&quot;https://vijos.org/training&quot;&gt;训练营&lt;/a&gt;中发现了一道十分水的&lt;a href=&quot;https://vijos.org/p/1130&quot;&gt;题目&lt;/a&gt;！
    
    </summary>
    
      <category term="ALL" scheme="https://cybeird.tk/categories/ALL/"/>
    
      <category term="C++" scheme="https://cybeird.tk/categories/ALL/C/"/>
    
    
      <category term="C++" scheme="https://cybeird.tk/tags/C/"/>
    
      <category term="TOWQs" scheme="https://cybeird.tk/tags/TOWQs/"/>
    
      <category term="Trip Of WaterQuestions" scheme="https://cybeird.tk/tags/Trip-Of-WaterQuestions/"/>
    
      <category term="MINE" scheme="https://cybeird.tk/tags/MINE/"/>
    
      <category term="递推" scheme="https://cybeird.tk/tags/%E9%80%92%E6%8E%A8/"/>
    
  </entry>
  
  <entry>
    <title>“上古看守者”的五种用途</title>
    <link href="https://cybeird.tk/2016/10/09/FromWordPress%20(5)/"/>
    <id>https://cybeird.tk/2016/10/09/FromWordPress (5)/</id>
    <published>2016-10-09T10:14:49.000Z</published>
    <updated>2016-10-23T02:21:58.000Z</updated>
    
    <content type="html"><![CDATA[<p><span style="color:#000000;">今天为各位带来我对上古看守者的一些思考和想法。</span><br><span style="font-size:x-large;"><span style="color:#ff8c00;">上古看守者（Ancient Watcher）</span></span></p>
<p><img src="http://att.bbs.duowan.com/forum/201407/04/234823zis7d313xb2vxvxz.png" alt="52b2ac01a18b87d68c93c3c3050828381d30fd4c.png" title="52b2ac01a18b87d68c93c3c3050828381d30fd4c.png"><a id="more"></a></p>
<p><span style="color:#000000;">上古看守者是本人非常喜爱的卡牌，2费即可购买“冰封雪人”4-5的完美身材，实在物有所值。</span><br><span style="color:#000000;">而且画风精美，意韵悠远；沙漠古道，让人不禁遥思远古。</span><br><span style="color:#000000;">这张牌的弊端在于无法主动攻击，但这并不妨碍其卓越品质，因为其可以搭配出千变万化的可能。</span></p>
<p><span style="font-size:large;"><span style="color:#008000;"><strong>方案一：门神。</strong></span></span></p>
<p><span style="color:#000000;">配合中立卡牌日怒保卫者、阿古斯防御者，可以让这张牌立刻成为一张卓然挺立的盾牌，保护其他随从和主将。</span></p>
<p><img src="http://att.bbs.duowan.com/forum/201407/04/234822qv0cnvqkivgtli0z.png" alt="66af8a8b87d6277f32c35ae42a381f30eb24fc4c.png" title="66af8a8b87d6277f32c35ae42a381f30eb24fc4c.png"><img src="http://att.bbs.duowan.com/forum/201407/04/2348213lebl9l20nk9aeu0.png" alt="4025acd6277f9e2faae475d41d30e924ba99f34c.png" title="4025acd6277f9e2faae475d41d30e924ba99f34c.png"></p>
<p><span style="color:#000000;">同时，德鲁伊的“野性印记”、“自然印记”，萨满的“先祖治疗”等，都可以让其获得嘲讽属性，但这种方式比较亏卡，相较于上述方式并不十分推荐。</span></p>
<p><img src="http://att.bbs.duowan.com/forum/201407/04/2348162xetzo4ohx61lelg.png" alt="66780c7f9e2f070886d442dceb24b899ab01f24c.png" title="66780c7f9e2f070886d442dceb24b899ab01f24c.png"><img src="http://att.bbs.duowan.com/forum/201407/04/234818axnb3mnikxba5g1z.png" alt="c6d1b52f07082838b0dcb4c8ba99a9014e08f14c.png" title="c6d1b52f07082838b0dcb4c8ba99a9014e08f14c.png"> <img src="http://att.bbs.duowan.com/forum/201407/04/23481592q2wd7u2sxjzffv.png" alt="7f812c0828381f3059c8e575ab014c086c06f04c.png" title="7f812c0828381f3059c8e575ab014c086c06f04c.png"><br><span style="color:#000000;">一旦成为嘲讽之墙的上古看守者，一定是让对手无比头痛的存在，因为除了消灭，根本无法清除。沉默掉？千万不要忘记，虽然沉默能够消除其嘲讽属性，但同时也会为其解咒，让其能够主动攻击！</span></p>
<p><span style="font-size:large;"><span style="color:#008000;"><strong>方案二：配合沉默，主动出击。</strong></span></span></p>
<p><span style="color:#000000;">通过将其沉默的方式，可以消除其“无法攻击”的远古诅咒，从而使其获得战斗能力杀入战场。</span><img src="http://att.bbs.duowan.com/forum/201407/04/234814mz3w2i26lzl42hn2.png" alt="e6a603381f30e9240975f4ed4e086e061f95f74c.png" title="e6a603381f30e9240975f4ed4e086e061f95f74c.png"><img src="http://att.bbs.duowan.com/forum/201407/04/2348121t1a7hm990qiqa9w.png" alt="c9963430e924b8991bed11e46c061d95087bf64c.png" title="c9963430e924b8991bed11e46c061d95087bf64c.png"><br><span style="color:#000000;">中立随从中的铁喙猫头鹰，破法者都是为其解咒的得力帮手，职业专属的丛林守护者、大地震击等也堪当此任。</span><br><span style="color:#000000;">但这样的代价在于，需要浪费掉宝贵的沉默技能，所以玩家要有对局势的判断力，从而因地制宜、权衡利弊。</span></p>
<p><strong><span style="font-size:large;"><span style="color:#008000;">方案三：做成WiFi，提供法力信号。</span></span></strong></p>
<p><span style="color:#000000;">年迈的法师，也能为这上古看守者提供法术强化的属性，与嘲讽相同，这会吸引对手火力，让其不得不将进攻看守者。</span></p>
<p><img src="http://att.bbs.duowan.com/forum/201407/04/2348117ner64xslx22gn6x.png" alt="fe9ec224b899a901ffe433ea1f950a7b0008f54c.png" title="fe9ec224b899a901ffe433ea1f950a7b0008f54c.png"></p>
<p><strong><span style="font-size:large;"><span style="color:#008000;">方案四（术士专属方案）：成为AOE的祭品。</span></span></strong></p>
<p><span style="color:#000000;">术士的专属蓝卡暗影烈焰，可以让上古看守者成为术士的“烈焰风暴”。</span><br><span style="color:#000000;">而且这个Combo只需要6费即可一次性打出。</span><br><span style="color:#000000;">由于前期入场的上古看守者的战场能力极强，一旦对手不将其清理，极有可能成为暗影烈焰的爆发引擎。</span></p>
<p><img src="http://att.bbs.duowan.com/forum/201407/04/234810iv3u19415siy95bv.png" alt="088a9399a9014c08daea4079087b020879f4f44c.png" title="088a9399a9014c08daea4079087b020879f4f44c.png"></p>
<p><strong><span style="font-size:large;"><span style="color:#008000;">方案五（术士专属方案）：成为虚空恐魔的食物。</span></span></strong></p>
<p><span style="color:#000000;">术士的专属蓝卡虚空恐魔，可以吞噬掉上古看守者4-5的属性，而成长为7-8的巨魔，这个Combo在非常低费即可完成。</span><br><span style="color:#000000;">这样的巨魔，倘若不被沉默或硬解，一定是加速游戏结束的催化剂。试想一种场景，2费打出上古看守者，3费打出虚空恐魔。3费出了7-8，对手一旦清理不及时，极容易崩盘。</span></p>
<p><img src="http://att.bbs.duowan.com/forum/201407/04/2348085ercmyc49h5bc909.png" alt="593782014c086e06a879579700087bf408d1cb4c.png" title="593782014c086e06a879579700087bf408d1cb4c.png"></p>
<p>&nbsp;</p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;span style=&quot;color:#000000;&quot;&gt;今天为各位带来我对上古看守者的一些思考和想法。&lt;/span&gt;&lt;br&gt;&lt;span style=&quot;font-size:x-large;&quot;&gt;&lt;span style=&quot;color:#ff8c00;&quot;&gt;上古看守者（Ancient Watcher）&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://att.bbs.duowan.com/forum/201407/04/234823zis7d313xb2vxvxz.png&quot; alt=&quot;52b2ac01a18b87d68c93c3c3050828381d30fd4c.png&quot; title=&quot;52b2ac01a18b87d68c93c3c3050828381d30fd4c.png&quot;&gt;
    
    </summary>
    
      <category term="ALL" scheme="https://cybeird.tk/categories/ALL/"/>
    
      <category term="Heartstone" scheme="https://cybeird.tk/categories/ALL/Heartstone/"/>
    
    
      <category term="强势" scheme="https://cybeird.tk/tags/%E5%BC%BA%E5%8A%BF/"/>
    
      <category term="Heartstone" scheme="https://cybeird.tk/tags/Heartstone/"/>
    
      <category term="妙趣横生" scheme="https://cybeird.tk/tags/%E5%A6%99%E8%B6%A3%E6%A8%AA%E7%94%9F/"/>
    
  </entry>
  
  <entry>
    <title>真~水题 一元三次方程！(TOWQs)</title>
    <link href="https://cybeird.tk/2016/10/08/FromWordPress%20(25)/"/>
    <id>https://cybeird.tk/2016/10/08/FromWordPress (25)/</id>
    <published>2016-10-08T06:40:48.000Z</published>
    <updated>2016-10-23T06:15:16.000Z</updated>
    
    <content type="html"><![CDATA[<p>这是我第一次写如此正常的题解，心情感到十分激动；</p>
<p>没错，我遵循我的<a href="https://cybirdy.wordpress.com/2016/10/05/%e9%87%8c%e7%a8%8b%e7%a2%91%ef%bc%81%e5%b1%85%e7%84%b6%e8%a6%81%e5%bc%80%e5%a7%8b%e7%96%af%e7%8b%82%e6%90%9c%e7%b4%a2%e6%b0%b4%e9%a2%98%ef%bc%81/" target="_blank" rel="external">誓言</a>来刷水题，而最近的水题则是关于灰常简单的！没错，就是非常简单的枚举而已。恩，而今天写的就是<a href="https://vijos.org/p/1116" target="_blank" rel="external">这道题目</a>；<a id="more"></a></p>
<p>当然，这道题据说也是可以直接用公式来做，但是我们说好了要用枚举当然不能用如此无脑的方式了(当然枚举也很无脑，而且我也担心用公式的话会出现关于精度的问题）</p>
<p>主要还是二分，然后端点进行特殊处理</p>
<blockquote>
<p>提示：记函数f(x)，若存在2个实数x1和x2，且x1&lt;x2，使f(x1)*(x2)&lt;0，则在(x1, x2)之间一定存在实数x0使得f(x0)=0。<br>而且相信大家也都在提示里面看到了，就基于这个原理来二分，不断枚举直到找到符合条件的值</p>
</blockquote>
<p>下面上代码<br><figure class="highlight c++"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div></pre></td><td class="code"><pre><div class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;iostream&gt;</span></span></div><div class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cstdio&gt;</span></span></div><div class="line"><span class="meta">#<span class="meta-keyword">define</span> TINY 0.000000001</span></div><div class="line"><span class="keyword">double</span> a,b,c,d,l,r,p;</div><div class="line"><span class="function"><span class="keyword">double</span> <span class="title">f</span><span class="params">(<span class="keyword">double</span> x)</span></span>&#123;      <span class="comment">//返回式子的值 </span></div><div class="line">    <span class="keyword">return</span> ((a*x+b)*x+c)*x+d;</div><div class="line">&#125;</div><div class="line"><span class="function"><span class="keyword">inline</span> <span class="keyword">int</span> <span class="title">equal</span><span class="params">(<span class="keyword">double</span> a,<span class="keyword">double</span> b)</span></span>&#123;</div><div class="line">    <span class="keyword">return</span> <span class="built_in">fabs</span>(a-b)&amp;lt;TINY;</div><div class="line">&#125;</div><div class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</div><div class="line">    <span class="built_in">scanf</span>(<span class="string">"%lf%lf%lf%lf"</span>,&amp;amp;a,&amp;amp;b,&amp;amp;c,&amp;amp;d);</div><div class="line">    l=<span class="number">-100</span>;</div><div class="line">    <span class="keyword">for</span>(l=<span class="number">-100.0</span>;l&amp;lt;=<span class="number">99.0</span>;l+=<span class="number">1.0</span>)&#123;  <span class="comment">//从-100开始枚举                   r=l+1;                 double M=f(l)*f(r);                 if(M&amp;gt;0)</span></div><div class="line">            <span class="keyword">continue</span>;		<span class="comment">//如果f(l)*f(r)&amp;gt;0，那么跳出本次循环 </span></div><div class="line">        <span class="keyword">double</span> pl=l,pr=r,pm;</div><div class="line">        <span class="keyword">if</span>(equal(f(l),<span class="number">0</span>))&#123;</div><div class="line">            <span class="built_in">printf</span>(<span class="string">"%.2lf "</span>,l);</div><div class="line">            <span class="keyword">continue</span>;</div><div class="line">        &#125;</div><div class="line">        <span class="keyword">if</span>(equal(f(r),<span class="number">0</span>))&#123;</div><div class="line">            l++;</div><div class="line">            <span class="built_in">printf</span>(<span class="string">"%.2lf "</span>,r);</div><div class="line">            <span class="keyword">continue</span>;</div><div class="line">        &#125;      <span class="comment">//左右两边不断缩小寻找范围，直到找到那个值（结果） </span></div><div class="line">        <span class="keyword">while</span>(<span class="number">1</span>)&#123;</div><div class="line">            pm=(pl+pr)/<span class="number">2</span>;</div><div class="line">            <span class="keyword">if</span>(f(pl)*f(pm)&amp;lt;=<span class="number">0</span>)</div><div class="line">                pr=pm;</div><div class="line">            <span class="keyword">else</span></div><div class="line">                pl=pm;</div><div class="line">            <span class="keyword">if</span>(equal(f(pm),<span class="number">0</span>))&#123;</div><div class="line">                <span class="built_in">printf</span>(<span class="string">"%.2lf "</span>,pm);</div><div class="line">                <span class="keyword">break</span>;  <span class="comment">//还是二分 </span></div><div class="line">            &#125;</div><div class="line">        &#125;</div><div class="line">    &#125;</div><div class="line">    <span class="keyword">return</span> <span class="number">0</span>;</div><div class="line">&#125;</div></pre></td></tr></table></figure></p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;这是我第一次写如此正常的题解，心情感到十分激动；&lt;/p&gt;
&lt;p&gt;没错，我遵循我的&lt;a href=&quot;https://cybirdy.wordpress.com/2016/10/05/%e9%87%8c%e7%a8%8b%e7%a2%91%ef%bc%81%e5%b1%85%e7%84%b6%e8%a6%81%e5%bc%80%e5%a7%8b%e7%96%af%e7%8b%82%e6%90%9c%e7%b4%a2%e6%b0%b4%e9%a2%98%ef%bc%81/&quot;&gt;誓言&lt;/a&gt;来刷水题，而最近的水题则是关于灰常简单的！没错，就是非常简单的枚举而已。恩，而今天写的就是&lt;a href=&quot;https://vijos.org/p/1116&quot;&gt;这道题目&lt;/a&gt;；
    
    </summary>
    
      <category term="ALL" scheme="https://cybeird.tk/categories/ALL/"/>
    
      <category term="C++" scheme="https://cybeird.tk/categories/ALL/C/"/>
    
    
      <category term="C++" scheme="https://cybeird.tk/tags/C/"/>
    
      <category term="TOWQs" scheme="https://cybeird.tk/tags/TOWQs/"/>
    
      <category term="Trip Of WaterQuestions" scheme="https://cybeird.tk/tags/Trip-Of-WaterQuestions/"/>
    
      <category term="搜索" scheme="https://cybeird.tk/tags/%E6%90%9C%E7%B4%A2/"/>
    
      <category term="枚举" scheme="https://cybeird.tk/tags/%E6%9E%9A%E4%B8%BE/"/>
    
  </entry>
  
  <entry>
    <title>里程碑！居然要开始疯狂搜索水题！</title>
    <link href="https://cybeird.tk/2016/10/05/FromWordPress%20(31)/"/>
    <id>https://cybeird.tk/2016/10/05/FromWordPress (31)/</id>
    <published>2016-10-05T10:34:22.000Z</published>
    <updated>2016-10-23T02:21:58.000Z</updated>
    
    <content type="html"><![CDATA[<p>今天是2016年10月4日，也是国庆节假期竞赛集训的第4天（哈哈，还是旷月考的第二天）；</p>
<p>但是。。。。，。。。。，。。。，。。，。，。，，。，，。，。；；；；<a id="more"></a></p>
<p>我今天感到无尽的苦痛！</p>
<p>因为！<img src="https://cybirdy.files.wordpress.com/2016/10/08f790529822720e0a79e0b779cb0a46f31fabc3.png" alt="08f790529822720e0a79e0b779cb0a46f31fabc3"></p>
<p>而在原(xue)力(zhang)的指引下，我只好做出了一个神奇的决定；</p>
<p><img src="https://cybirdy.files.wordpress.com/2016/10/c254fc47f35a377de4eba27afc7c1224_r.png" alt="c254fc47f35a377de4eba27afc7c1224_r"></p>
<p>我要开始刷题了；</p>
<p>不，不仅仅是这样，我还要更多，没错，这也是我写这篇博客的原因！</p>
<p>我在这里立下誓言，不刷光水题终不还！</p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;今天是2016年10月4日，也是国庆节假期竞赛集训的第4天（哈哈，还是旷月考的第二天）；&lt;/p&gt;
&lt;p&gt;但是。。。。，。。。。，。。。，。。，。，。，，。，，。，。；；；；
    
    </summary>
    
      <category term="ALL" scheme="https://cybeird.tk/categories/ALL/"/>
    
      <category term="C++" scheme="https://cybeird.tk/categories/ALL/C/"/>
    
    
      <category term="TECHNOLOGY" scheme="https://cybeird.tk/tags/TECHNOLOGY/"/>
    
      <category term="强势" scheme="https://cybeird.tk/tags/%E5%BC%BA%E5%8A%BF/"/>
    
      <category term="搜索" scheme="https://cybeird.tk/tags/%E6%90%9C%E7%B4%A2/"/>
    
      <category term="For NOIP" scheme="https://cybeird.tk/tags/For-NOIP/"/>
    
  </entry>
  
  <entry>
    <title>天哪！毫无思绪！令人感到恐惧的数学(水题?)(TOWQs)</title>
    <link href="https://cybeird.tk/2016/10/04/FromWordPress%20(13)/"/>
    <id>https://cybeird.tk/2016/10/04/FromWordPress (13)/</id>
    <published>2016-10-04T11:26:36.000Z</published>
    <updated>2016-10-23T06:12:22.000Z</updated>
    
    <content type="html"><![CDATA[<p>这道题的题目描述灰常简单，第一眼看以为是一道十分水的题目；</p>
<p>但是！！！（我仔细一看也没有发现这背后隐藏着可怕的真相~）<a id="more"></a></p>
<p>下面给出题目描述：</p>
<blockquote>
<p><pre>给出一个整数x，你可以对x进行两种操作。<br>1、将x变成4x+3<br>2、将x变成8x+7<br>问，最少通过多少次操作，使得x是1000000007的倍数？</pre><br>没错，就是这么坑！当我仔细读完题目后本还抱有几分希望（也许可以水过）</p>
</blockquote>
<p>但是！！！没错我又一次用了“但是”这个词；</p>
<p>当我看到数据范围时我几乎就放弃了，只能用暴力来骗分了，仅仅只水到了50分（也知足了）</p>
<blockquote>
<h2 id="【输入格式】"><a href="#【输入格式】" class="headerlink" title="【输入格式】"></a>【输入格式】</h2><p>一行，一个整数x(1&lt;=x&lt;=1000000006)。</p>
<h2 id="【输出格式】"><a href="#【输出格式】" class="headerlink" title="【输出格式】"></a>【输出格式】</h2><p>一行，表示最少的操作步数。保证答案不超过10^5。<br>如此多的可能性，使我敢打赌这绝对是一道数学题，而且是我想不到的那种；真是让人感到没有办法。。</p>
</blockquote>
<p>而更加令人吃惊的在后面：我以为这道题应该会用到我所不能触及的只是，然而，只是一个十分巨大的脑洞！</p>
<p>没错，学长仅仅只是在黑板（白板？）上写下了两个式子，如下：</p>
<p>## </p>
<p><pre>8( 8x + 7 ) + 7 = 64x + 63；<br>4( 4( 4x + 3 ) + 3 ) + 3 = 64x + 63；</pre><br>然后再稍微的推导一下就可以得到：</p>
<p><pre>2( 2x + 1 ) + 1 = 4x + 3；<br>2( 2( 2x + 1 ) + 1 ) + 1 = 8x + 7；</pre><br>真是令人感到吃惊！这意味着 当我们运行了两次 8x+7 运算时，就相当于运行了三次 4x+3 运算；</p>
<p>那么这道题目就变的简单了许多，我们可以得到结论：4x+3的运算次数必然不会达到3次以上，因为如果有三次 4x+3 运算便可以用两次 8x+7 运算来代替(题目要求用尽可能少的次数来解);</p>
<p>而为了方便一些，我们便统一的用 2x+1 来代替这两种运算！<br><figure class="highlight c++"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">while</span>(<span class="literal">true</span>)</div><div class="line">&#123;</div><div class="line">    num=(num*<span class="number">2</span>+<span class="number">1</span>)%<span class="number">1000000007</span>;</div><div class="line">    ans++;</div><div class="line">    <span class="keyword">if</span>(num==<span class="number">0</span>) <span class="keyword">break</span>;</div><div class="line">&#125;</div></pre></td></tr></table></figure></p>
<p>这就简单了许多，下面就可以上正解的代码了<br><figure class="highlight c++"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div></pre></td><td class="code"><pre><div class="line"><span class="meta">#<span class="meta-keyword">include</span>&amp;lt;iostream&amp;gt;</span></div><div class="line"><span class="meta">#<span class="meta-keyword">include</span>&amp;lt;cstdio&amp;gt;</span></div><div class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</div><div class="line"><span class="keyword">long</span> <span class="keyword">long</span> ans,num;</div><div class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></div><div class="line">&#123;</div><div class="line">    <span class="built_in">scanf</span>(<span class="string">"&amp;amp;lld"</span>,&amp;amp;n);</div><div class="line">    <span class="keyword">while</span>(<span class="literal">true</span>)</div><div class="line">    &#123;</div><div class="line">        num=(num*<span class="number">2</span>+<span class="number">1</span>)%<span class="number">1000000007</span>;</div><div class="line">        ans++;</div><div class="line">        <span class="keyword">if</span>(num==<span class="number">0</span>) <span class="keyword">break</span>;</div><div class="line">    &#125;</div><div class="line">    <span class="built_in">printf</span>(<span class="string">"%lld\n"</span>,(ans<span class="number">-1</span>)/<span class="number">3</span>+<span class="number">1</span>);</div><div class="line">    <span class="keyword">return</span> <span class="number">0</span>; </div><div class="line">&#125;</div></pre></td></tr></table></figure></p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;这道题的题目描述灰常简单，第一眼看以为是一道十分水的题目；&lt;/p&gt;
&lt;p&gt;但是！！！（我仔细一看也没有发现这背后隐藏着可怕的真相~）
    
    </summary>
    
      <category term="ALL" scheme="https://cybeird.tk/categories/ALL/"/>
    
      <category term="C++" scheme="https://cybeird.tk/categories/ALL/C/"/>
    
    
      <category term="C++" scheme="https://cybeird.tk/tags/C/"/>
    
      <category term="强势" scheme="https://cybeird.tk/tags/%E5%BC%BA%E5%8A%BF/"/>
    
      <category term="奇技淫巧" scheme="https://cybeird.tk/tags/%E5%A5%87%E6%8A%80%E6%B7%AB%E5%B7%A7/"/>
    
  </entry>
  
  <entry>
    <title>吃惊！吴甏甏偷偷去卫生间竟然只为玩拼图！</title>
    <link href="https://cybeird.tk/2016/10/04/FromWordPress%20(12)/"/>
    <id>https://cybeird.tk/2016/10/04/FromWordPress (12)/</id>
    <published>2016-10-04T08:57:30.000Z</published>
    <updated>2016-10-23T02:21:58.000Z</updated>
    
    <content type="html"><![CDATA[<p>没错！这件事情还是要从集训刚刚开始的时候说起；那时候，发生了一件可怕的事情——断网！</p>
<p><a href="http://cybirdy.wordpress.com/wp-admin" target="_blank" rel="external">继续阅读 →</a></p>
<p>&nbsp;</p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;没错！这件事情还是要从集训刚刚开始的时候说起；那时候，发生了一件可怕的事情——断网！&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;http://cybirdy.wordpress.com/wp-admin&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;继续阅读 →&lt;/
    
    </summary>
    
      <category term="ALL" scheme="https://cybeird.tk/categories/ALL/"/>
    
      <category term="TECHNOLOGY" scheme="https://cybeird.tk/categories/ALL/TECHNOLOGY/"/>
    
    
      <category term="作死" scheme="https://cybeird.tk/tags/%E4%BD%9C%E6%AD%BB/"/>
    
      <category term="A2" scheme="https://cybeird.tk/tags/A2/"/>
    
  </entry>
  
  <entry>
    <title>如果代码按行付费，会有什么好玩的事情发生？</title>
    <link href="https://cybeird.tk/2016/10/04/FromWordPress%20(17)/"/>
    <id>https://cybeird.tk/2016/10/04/FromWordPress (17)/</id>
    <published>2016-10-04T01:49:36.000Z</published>
    <updated>2016-10-23T02:21:58.000Z</updated>
    
    <content type="html"><![CDATA[<p>程序员联盟发布了一条消息:以后我们的代码要按行收费。客户们立即就炸了锅，按行收费?那你程序员不是想怎么写就怎么写，我们让你们做个项目，你写个空行，写点注释什么的，谁来管?</p>
<p>物竞天择。有人有需求就立即有人响应。正当这些客户无所适从的时候，一个职业产生了:代码缩行师。客户在审查项目交付的时候会先去缩行事务所请一位缩行师。缩行师的职责就是在保证不改变原有系统功能的前提下将程序缩减到最大的程序，缩行师按照缩减行数的百分之10收费。</p>
<p>缩行师是程序员最大的天敌。</p>
<p>缩行师也是分等级的，最低级的缩行师只能只能缩缩空行，挪一挪括号，一般人都能做，大抵是被程序员看不起的，往上一级就要稍微懂一点编程知识了，知道怎么把定义的变量合到一行，怎么去掉可以去掉的括号，他们已经一脚踏入了领域和空间的境界了，他们许多是程序员做不下去为了生计讨口饭吃，倘若搞好客户关系，也能活的很滋润。</p>
<p>再往上一级，这些人是缩行师界的精英，而且随时可以成为最优秀的程序员，他们把无聊的体力工作交给下边的人去做，自己则和程序员斗智斗勇，”你这个变量没必要定义”，”你这两处的功能重复了，回去重构一下”，”你这个是自己造轮子，去找别人开源写好的”。</p>
<p>他们有的曾经是最好的程序员，有的是因为忍受不了缩行师的百般挑刺，无奈转行，有的是因为满足内心找茬的欲望。他们有的是从事多年的缩行师，从学徒起一步一步坐起，扎扎实实的走到现在的地位，这个级别的缩行师是各大缩行事务所争抢的对象。</p>
<p>每个客户都以邀请到他们为荣，预约的人多了，事务所开始准备”缩号”，客户只有摇到了缩号才能有幸邀请到这些人，有的客户更是为专家缩号大打出手，于是又催生了一种叫”缩牛”的职业，不再赘述。</p>
<p>他们某种程度上已经达到了缩行师的顶峰，但还有一种传说中的存在，他们是打破规则的存在，如果你侥幸看到他们的杰作，你就会发现上面提到的都是浮云。一行，只需要一行就够了，什么工程，什么项目，只需要一行。jquery就是他们的杰作。</p>
<p>有一个站在巅峰的男人曾经应拉里·佩奇的邀请将谷歌的所有代码写成了一行，并且能完整的实现了谷歌现有的所有功能，人们甚至发现谷歌搜索快了将近30%。后来有华尔街和硅谷的资深从业者看到这行代码后久久不能平静，对这行代码给出了5600亿美元的估值，当然这行代码一般人是看不完的，据说这行代码的长度可以从加州连接到M31星系。</p>
<p>程序员的生活变得越来越艰难，程序员联盟本身的福祉变成了灾难，尽管随着代码的行数减少，单行的价格在不断的升高，程序员行业的整体质量也在不断的提高，但依旧艰难。程序员联盟又做了一个艰难的决定:最终的代码每行不得多于200字符。对于一般的程序，一行200字符足够了，即使一行内容长，也可以分行解决。</p>
<p>在程序员联盟认为一劳永逸的同时缩行师的行业发生了惊天动地的变化，对于底层的没有太大变化，但对于习惯把程序挤到一行的从业者来说无异于晴天霹雳。当原来的方法不适用的时候他们又何去何从？</p>
<p>在进行了多次缩行师技术交流峰会之后他们找到了一个对策，那就是将计就计，把每行的代码都调整到200字符，在规则的范围内达到最大的收益。于是缩行师行会陆续制订了缩行师的规范，守则。</p>
<p>越来越多的人开始分享他们把代码调整成200字符的技巧，有的缩行师贴出代码提问“怎么把这段代码缩成标准的格式?”，就会有很多热心的缩行师为其解答，也会有不少伪装成缩行师的程序员冷嘲热讽甚至谩骂。</p>
<p>随着缩行技术的发展和普及，程序员和客户由一开始看到凹凸不平的代码变成一个个整齐的长方形的代码的一脸懵逼到渐渐习惯再到麻木。很多年过去以后，新的程序员甚至以为长方型的代码就应该是代码本来的样子。</p>
<p>程序员的世界也发生了很大的变化，越来越多的客户为了节省一笔缩行师的费用，开始要求程序员去写每行200个字符的长方形代码，程序员经过了这么多年的耳濡目染也渐渐的接受了，这第一批写方块代码的程序员渐渐引领了代码的潮流《编程方块》《代码方块之道》《方块之美》《重构-方块化改善既有代码》。。这些书开始变得越来越畅销。</p>
<p>缩行师除了偶尔被叫去做做code review，需要的越来越少了，整个行业也开始没落。</p>
<p>有人的地方就有江湖，有利益的地方就有冲突。</p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;程序员联盟发布了一条消息:以后我们的代码要按行收费。客户们立即就炸了锅，按行收费?那你程序员不是想怎么写就怎么写，我们让你们做个项目，你写个空行，写点注释什么的，谁来管?&lt;/p&gt;
&lt;p&gt;物竞天择。有人有需求就立即有人响应。正当这些客户无所适从的时候，一个职业产生了:代码缩行
    
    </summary>
    
      <category term="ALL" scheme="https://cybeird.tk/categories/ALL/"/>
    
    
      <category term="TECHNOLOGY" scheme="https://cybeird.tk/tags/TECHNOLOGY/"/>
    
      <category term="强势" scheme="https://cybeird.tk/tags/%E5%BC%BA%E5%8A%BF/"/>
    
      <category term="妙趣横生" scheme="https://cybeird.tk/tags/%E5%A6%99%E8%B6%A3%E6%A8%AA%E7%94%9F/"/>
    
  </entry>
  
  <entry>
    <title>去死吧！你这个异教徒人渣！</title>
    <link href="https://cybeird.tk/2016/10/04/FromWordPress%20(10)/"/>
    <id>https://cybeird.tk/2016/10/04/FromWordPress (10)/</id>
    <published>2016-10-04T01:43:34.000Z</published>
    <updated>2016-10-23T02:21:58.000Z</updated>
    
    <content type="html"><![CDATA[<p>一天我路过一座桥，碰巧看见一个人想跳河自杀。我跑过去对他大喊道：“别跳，别死啊。”</p>
<p>“为什么不让我跳？”他说。</p>
<p>“因为还有很多东西值得我们活下去啊。”</p>
<p>“有吗？比如说？”<a id="more"></a></p>
<p>“呃……你做什么工作？”</p>
<p>“程序员。”</p>
<p>我说：“我也是！瞧，有共同点了吧。你是软件还是硬件？”</p>
<p>“软件。”</p>
<p>“我也是！PC 还是 Web？”</p>
<p>“PC。”</p>
<p>“我也是！Windows 还是 Linux 平台？”</p>
<p>“Linux。”</p>
<p>“我也是！那你使用 C 还是 C++？”</p>
<p>“C++。”</p>
<p>“我也是。1998 年的 C++ 98 还是 2011 年的 C++ 11？”</p>
<p>“2011 年的 C++ 11。”</p>
<p>“我也是。大括号写在后面还是写在下一行？”</p>
<p>“下一行。”</p>
<p>“去死吧！你这个异教徒人渣！”我一把将他推下桥去。</p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;一天我路过一座桥，碰巧看见一个人想跳河自杀。我跑过去对他大喊道：“别跳，别死啊。”&lt;/p&gt;
&lt;p&gt;“为什么不让我跳？”他说。&lt;/p&gt;
&lt;p&gt;“因为还有很多东西值得我们活下去啊。”&lt;/p&gt;
&lt;p&gt;“有吗？比如说？”
    
    </summary>
    
      <category term="ALL" scheme="https://cybeird.tk/categories/ALL/"/>
    
      <category term="C++" scheme="https://cybeird.tk/categories/ALL/C/"/>
    
      <category term="TECHNOLOGY" scheme="https://cybeird.tk/categories/ALL/C/TECHNOLOGY/"/>
    
    
      <category term="C艹" scheme="https://cybeird.tk/tags/C%E8%89%B9/"/>
    
      <category term="IT" scheme="https://cybeird.tk/tags/IT/"/>
    
      <category term="TECHNOLOGY" scheme="https://cybeird.tk/tags/TECHNOLOGY/"/>
    
  </entry>
  
</feed>
